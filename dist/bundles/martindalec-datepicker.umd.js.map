{"version":3,"file":"martindalec-datepicker.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","ng://@martindalec/datepicker/core/date-adapter.ts","ng://@martindalec/datepicker/core/date-formats.ts","ng://@martindalec/datepicker/core/native-date-adapter.ts","ng://@martindalec/datepicker/core/native-date-formats.ts","ng://@martindalec/datepicker/core/index.ts","ng://@martindalec/datepicker/moment-adapter/moment-date-adapter.ts","ng://@martindalec/datepicker/moment-adapter/moment-date-formats.ts","ng://@martindalec/datepicker/moment-adapter/index.ts","ng://@martindalec/datepicker/datepicker-errors.ts","ng://@martindalec/datepicker/clock-view.ts","ng://@martindalec/datepicker/datepicker-animations.ts","ng://@martindalec/datepicker/datepicker-intl.ts","ng://@martindalec/datepicker/calendar-body.ts","ng://@martindalec/datepicker/month-view.ts","ng://@martindalec/datepicker/year-view.ts","ng://@martindalec/datepicker/years-view.ts","ng://@martindalec/datepicker/calendar.ts","ng://@martindalec/datepicker/datepicker.ts","ng://@martindalec/datepicker/datepicker-input.ts","ng://@martindalec/datepicker/datepicker-toggle.ts","ng://@martindalec/datepicker/datepicker-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { inject, InjectionToken, LOCALE_ID } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n/** InjectionToken for datepicker that can be used to override default locale code. */\r\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE', {\r\n  providedIn: 'root',\r\n  factory: MAT_DATE_LOCALE_FACTORY\r\n});\r\n\r\n/** @docs-private */\r\nexport function MAT_DATE_LOCALE_FACTORY(): string {\r\n  return inject(LOCALE_ID);\r\n}\r\n\r\n/**\r\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\r\n * If you are importing and providing this in your code you can simply remove it.\r\n * @deprecated\r\n * @deletion-target 7.0.0\r\n */\r\nexport const MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\r\n\r\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\r\nexport abstract class DateAdapter<D> {\r\n  /** The locale to use for all dates. */\r\n  protected locale: any;\r\n\r\n  /** A stream that emits when the locale changes. */\r\n  get localeChanges(): Observable<void> {\r\n    return this._localeChanges;\r\n  }\r\n  protected _localeChanges = new Subject<void>();\r\n\r\n  /**\r\n   * Gets the year component of the given date.\r\n   * @param date The date to extract the year from.\r\n   * @returns The year component.\r\n   */\r\n  abstract getYear(date: D): number;\r\n\r\n  /**\r\n   * Gets the month component of the given date.\r\n   * @param date The date to extract the month from.\r\n   * @returns The month component (0-indexed, 0 = January).\r\n   */\r\n  abstract getMonth(date: D): number;\r\n\r\n  abstract getHours(date: D): number;\r\n\r\n  abstract setHours(date: D, value: number): void;\r\n\r\n  abstract getMinutes(date: D): number;\r\n\r\n  abstract setMinutes(date: D, value: number): void;\r\n\r\n  abstract setSeconds(date: D, value: number, ms?: number): void;\r\n\r\n  /**\r\n   * Gets the date of the month component of the given date.\r\n   * @param date The date to extract the date of the month from.\r\n   * @returns The month component (1-indexed, 1 = first of month).\r\n   */\r\n  abstract getDate(date: D): number;\r\n\r\n  /**\r\n   * Gets the day of the week component of the given date.\r\n   * @param date The date to extract the day of the week from.\r\n   * @returns The month component (0-indexed, 0 = Sunday).\r\n   */\r\n  abstract getDayOfWeek(date: D): number;\r\n\r\n  /**\r\n   * Gets a list of names for the months.\r\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\r\n   * @returns An ordered list of all month names, starting with January.\r\n   */\r\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\r\n\r\n  /**\r\n   * Gets a list of names for the dates of the month.\r\n   * @returns An ordered list of all date of the month names, starting with '1'.\r\n   */\r\n  abstract getDateNames(): string[];\r\n\r\n  abstract getHourNames(): string[];\r\n\r\n  abstract getMinuteNames(): string[];\r\n\r\n  /**\r\n   * Gets a list of names for the days of the week.\r\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\r\n   * @returns An ordered list of all weekday names, starting with Sunday.\r\n   */\r\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\r\n\r\n  /**\r\n   * Gets the name for the year of the given date.\r\n   * @param date The date to get the year name for.\r\n   * @returns The name of the given year (e.g. '2017').\r\n   */\r\n  abstract getYearName(date: D): string;\r\n\r\n  /**\r\n   * Gets the first day of the week.\r\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\r\n   */\r\n  abstract getFirstDayOfWeek(): number;\r\n\r\n  /**\r\n   * Gets the number of days in the month of the given date.\r\n   * @param date The date whose month should be checked.\r\n   * @returns The number of days in the month of the given date.\r\n   */\r\n  abstract getNumDaysInMonth(date: D): number;\r\n\r\n  /**\r\n   * Clones the given date.\r\n   * @param date The date to clone\r\n   * @returns A new date equal to the given date.\r\n   */\r\n  abstract clone(date: D): D;\r\n\r\n  /**\r\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\r\n   * month and date.\r\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\r\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\r\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\r\n   * @returns The new date, or null if invalid.\r\n   */\r\n  abstract createDate(year: number, month: number, date: number, hours?: number, minutes?: number): D;\r\n\r\n  /**\r\n   * Gets today's date.\r\n   * @returns Today's date.\r\n   */\r\n  abstract today(): D;\r\n\r\n  /**\r\n   * Parses a date from a user-provided value.\r\n   * @param value The value to parse.\r\n   * @param parseFormat The expected format of the value being parsed\r\n   *     (type is implementation-dependent).\r\n   * @returns The parsed date.\r\n   */\r\n  abstract parse(value: any, parseFormat: any): D | null;\r\n\r\n  /**\r\n   * Formats a date as a string according to the given format.\r\n   * @param date The value to format.\r\n   * @param displayFormat The format to use to display the date as a string.\r\n   * @returns The formatted date string.\r\n   */\r\n  abstract format(date: D, displayFormat: any): string;\r\n\r\n  /**\r\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\r\n   * calendar for each year and then finding the closest date in the new month. For example when\r\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\r\n   * @param date The date to add years to.\r\n   * @param years The number of years to add (may be negative).\r\n   * @returns A new date equal to the given one with the specified number of years added.\r\n   */\r\n  abstract addCalendarYears(date: D, years: number): D;\r\n\r\n  /**\r\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\r\n   * calendar for each month and then finding the closest date in the new month. For example when\r\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\r\n   * @param date The date to add months to.\r\n   * @param months The number of months to add (may be negative).\r\n   * @returns A new date equal to the given one with the specified number of months added.\r\n   */\r\n  abstract addCalendarMonths(date: D, months: number): D;\r\n\r\n  /**\r\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\r\n   * calendar for each day.\r\n   * @param date The date to add days to.\r\n   * @param days The number of days to add (may be negative).\r\n   * @returns A new date equal to the given one with the specified number of days added.\r\n   */\r\n  abstract addCalendarDays(date: D, days: number): D;\r\n\r\n  abstract addCalendarHours(date: D, hours: number): D;\r\n\r\n  abstract addCalendarMinutes(date: D, minutes: number): D;\r\n\r\n  /**\r\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\r\n   * This method is used to generate date strings that are compatible with native HTML attributes\r\n   * such as the `min` or `max` attribute of an `<input>`.\r\n   * @param date The date to get the ISO date string for.\r\n   * @returns The ISO date string date string.\r\n   */\r\n  abstract toIso8601(date: D): string;\r\n\r\n  /**\r\n   * Checks whether the given object is considered a date instance by this DateAdapter.\r\n   * @param obj The object to check\r\n   * @returns Whether the object is a date instance.\r\n   */\r\n  abstract isDateInstance(obj: any): boolean;\r\n\r\n  /**\r\n   * Checks whether the given date is valid.\r\n   * @param date The date to check.\r\n   * @returns Whether the date is valid.\r\n   */\r\n  abstract isValid(date: D): boolean;\r\n\r\n  /**\r\n   * Gets date instance that is not valid.\r\n   * @returns An invalid date.\r\n   */\r\n  abstract invalid(): D;\r\n\r\n  /**\r\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n   * string). The default implementation does not allow any deserialization, it simply checks that\r\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\r\n   * support passing values from your backend directly to these properties by overriding this method\r\n   * to also deserialize the format used by your backend.\r\n   * @param value The value to be deserialized into a date object.\r\n   * @returns The deserialized date object, either a valid date, null if the value can be\r\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n   */\r\n  deserialize(value: any): D | null {\r\n    if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\r\n      return value;\r\n    }\r\n    return this.invalid();\r\n  }\r\n\r\n  /**\r\n   * Sets the locale used for all dates.\r\n   * @param locale The new locale.\r\n   */\r\n  setLocale(locale: any) {\r\n    this.locale = locale;\r\n    this._localeChanges.next();\r\n  }\r\n\r\n  /**\r\n   * Compares two dates.\r\n   * @param first The first date to compare.\r\n   * @param second The second date to compare.\r\n   * @param unit Unit deep of the comparision.\r\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n   *     a number greater than 0 if the first date is later.\r\n   */\r\n  compareDate(first: D, second: D, unit = 'minute'): number {\r\n    let f = this.getYear(first).toString();\r\n    let s = this.getYear(second).toString();\r\n\r\n    if (['y', 'year', 'years'].indexOf(unit) >= 0) {\r\n      return Number(f) - Number(s);\r\n    } else {\r\n      f = f.concat(('00' + this.getMonth(first)).slice(-2));\r\n      s = s.concat(('00' + this.getMonth(second)).slice(-2));\r\n    }\r\n\r\n    if (['M', 'month', 'months'].indexOf(unit) >= 0) {\r\n      return Number(f) - Number(s);\r\n    } else {\r\n      f = f.concat(('00' + this.getDate(first)).slice(-2));\r\n      s = s.concat(('00' + this.getDate(second)).slice(-2));\r\n    }\r\n\r\n    if (['d', 'day', 'days'].indexOf(unit) >= 0) {\r\n      return Number(f) - Number(s);\r\n    } else {\r\n      f = f.concat(('00' + this.getHours(first)).slice(-2));\r\n      s = s.concat(('00' + this.getHours(second)).slice(-2));\r\n    }\r\n\r\n    if (['h', 'hour', 'hours'].indexOf(unit) >= 0) {\r\n      return Number(f) - Number(s);\r\n    } else {\r\n      f = f.concat(('00' + this.getMinutes(first)).slice(-2));\r\n      s = s.concat(('00' + this.getMinutes(second)).slice(-2));\r\n    }\r\n\r\n    return Number(f) - Number(s);\r\n  }\r\n\r\n  /**\r\n   * Checks if two dates are equal.\r\n   * @param first The first date to check.\r\n   * @param second The second date to check.\r\n   * @param unit Unit deep of the comparision.\r\n   * @returns Whether the two dates are equal.\r\n   *     Null dates are considered equal to other null dates.\r\n   */\r\n  sameDate(first: D | null, second: D | null, unit = 'minute'): boolean {\r\n    return first && second ? !this.compareDate(first, second, unit) : first === second;\r\n  }\r\n\r\n  /**\r\n   * Clamp the given date between min and max dates.\r\n   * @param date The date to clamp.\r\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\r\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\r\n   * @param unit Unit deep of the comparision.\r\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n   *     otherwise `date`.\r\n   */\r\n  clampDate(date: D | null, min?: D | null, max?: D | null, unit = 'minute'): D | null {\r\n    if (!date) {\r\n      return null;\r\n    }\r\n    if (min && this.compareDate(date, min, unit) < 0) {\r\n      return min;\r\n    }\r\n    if (max && this.compareDate(date, max, unit) > 0) {\r\n      return max;\r\n    }\r\n    return date;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport interface MatDateFormats {\r\n  parse: {\r\n    date: any;\r\n    datetime: any;\r\n    time: any;\r\n  };\r\n  display: {\r\n    date: any;\r\n    datetime: any;\r\n    time: any;\r\n    dateA11yLabel: any;\r\n    monthDayLabel: any;\r\n    monthDayA11yLabel: any;\r\n    monthYearLabel: any;\r\n    monthYearA11yLabel: any;\r\n    timeLabel: any;\r\n  };\r\n}\r\n\r\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from './date-adapter';\r\n\r\n// TODO(mmalerba): Remove when we no longer support safari 9.\r\n/** Whether the browser supports the Intl API. */\r\nconst SUPPORTS_INTL_API = typeof Intl !== 'undefined';\r\n\r\n/** The default month names to use if Intl API is not available. */\r\nconst DEFAULT_MONTH_NAMES = {\r\n  long: [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ],\r\n  short: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\r\n};\r\n\r\n/** The default date names to use if Intl API is not available. */\r\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\r\n\r\n/** The default hour names to use if Intl API is not available. */\r\nconst DEFAULT_HOUR_NAMES = range(24, String);\r\n\r\n/** The default minute names to use if Intl API is not available. */\r\nconst DEFAULT_MINUTE_NAMES = range(60, String);\r\n\r\n/** The default day of the week names to use if Intl API is not available. */\r\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\r\n  long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n  short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\r\n};\r\n\r\n/**\r\n * Matches strings that have the form of a valid RFC 3339 string\r\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\r\n * because the regex will match strings an with out of bounds month, date, etc.\r\n */\r\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\r\n\r\n/** Creates an array and fills it with values. */\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n  const valuesArray = Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    valuesArray[i] = valueFunction(i);\r\n  }\r\n  return valuesArray;\r\n}\r\n\r\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\r\n@Injectable()\r\nexport class NativeDateAdapter extends DateAdapter<Date> {\r\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\r\n  private readonly _clampDate: boolean;\r\n\r\n  /**\r\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\r\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\r\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\r\n   * will produce `'8/13/1800'`.\r\n   *\r\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\r\n   * getting the string representation of a Date object from it's utc representation. We're keeping\r\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\r\n   * though.\r\n   */\r\n  useUtcForDisplay: boolean = true;\r\n\r\n  constructor(\r\n    platform: Platform,\r\n    @Optional()\r\n    @Inject(MAT_DATE_LOCALE)\r\n    matDateLocale: string\r\n  ) {\r\n    super();\r\n    super.setLocale(matDateLocale);\r\n\r\n    // IE does its own time zone correction, so we disable this on IE.\r\n    this.useUtcForDisplay = !platform.TRIDENT;\r\n    this._clampDate = platform.TRIDENT || platform.EDGE;\r\n  }\r\n\r\n  getYear(date: Date): number {\r\n    return date.getFullYear();\r\n  }\r\n\r\n  getMonth(date: Date): number {\r\n    return date.getMonth();\r\n  }\r\n\r\n  getDate(date: Date): number {\r\n    return date.getDate();\r\n  }\r\n\r\n  getHours(date: Date): number {\r\n    return date.getHours();\r\n  }\r\n\r\n  setHours(date: Date, value: number): void {\r\n    date.setHours(value);\r\n  }\r\n\r\n  getMinutes(date: Date): number {\r\n    return date.getMinutes();\r\n  }\r\n\r\n  setMinutes(date: Date, value: number): void {\r\n    date.setMinutes(value);\r\n  }\r\n\r\n  setSeconds(date: Date, value: number, ms?: number): void {\r\n    date.setSeconds(value, ms);\r\n  }\r\n\r\n  getDayOfWeek(date: Date): number {\r\n    return date.getDay();\r\n  }\r\n\r\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\r\n      return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\r\n    }\r\n    return DEFAULT_MONTH_NAMES[style];\r\n  }\r\n\r\n  getDateNames(): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\r\n      return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\r\n    }\r\n    return DEFAULT_DATE_NAMES;\r\n  }\r\n\r\n  getHourNames(): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, { hour: 'numeric', timeZone: 'utc' });\r\n      return range(24, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, 0, 0, i))));\r\n    }\r\n    return DEFAULT_HOUR_NAMES;\r\n  }\r\n\r\n  getMinuteNames(): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, { minute: 'numeric', timeZone: 'utc' });\r\n      return range(60, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, 0, 0, 0, i))));\r\n    }\r\n    return DEFAULT_MINUTE_NAMES;\r\n  }\r\n\r\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\r\n      return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\r\n    }\r\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\r\n  }\r\n\r\n  getYearName(date: Date): string {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\r\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\r\n    }\r\n    return String(this.getYear(date));\r\n  }\r\n\r\n  getFirstDayOfWeek(): number {\r\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\r\n    return 0;\r\n  }\r\n\r\n  getNumDaysInMonth(date: Date): number {\r\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\r\n  }\r\n\r\n  clone(date: Date): Date {\r\n    return this.createDate(\r\n      this.getYear(date),\r\n      this.getMonth(date),\r\n      this.getDate(date),\r\n      this.getHours(date),\r\n      this.getMinutes(date)\r\n    );\r\n  }\r\n\r\n  createDate(year: number, month: number, date: number, hours?: number, minutes?: number): Date {\r\n    // Check for invalid month and date (except upper bound on date which we have to check after\r\n    // creating the Date).\r\n    if (month < 0 || month > 11) {\r\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n    }\r\n\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n\r\n    const result = this._createDateWithOverflow(year, month, date, hours, minutes);\r\n\r\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n    if (result.getMonth() !== month) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  today(): Date {\r\n    return new Date();\r\n  }\r\n\r\n  parse(value: any): Date | null {\r\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\r\n    // parameters.\r\n    if (typeof value === 'number') {\r\n      return new Date(value);\r\n    }\r\n    return value ? new Date(Date.parse(value)) : null;\r\n  }\r\n\r\n  format(date: Date, displayFormat: Object): string {\r\n    if (!this.isValid(date)) {\r\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\r\n    }\r\n\r\n    if (SUPPORTS_INTL_API) {\r\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\r\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\r\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\r\n        date = this.clone(date);\r\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\r\n      }\r\n\r\n      displayFormat = { ...displayFormat, timeZone: 'utc' };\r\n\r\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\r\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\r\n    }\r\n    return this._stripDirectionalityCharacters(date.toDateString());\r\n  }\r\n\r\n  addCalendarYears(date: Date, years: number): Date {\r\n    return this.addCalendarMonths(date, years * 12);\r\n  }\r\n\r\n  addCalendarMonths(date: Date, months: number): Date {\r\n    let newDate = this._createDateWithOverflow(\r\n      this.getYear(date),\r\n      this.getMonth(date) + months,\r\n      this.getDate(date),\r\n      this.getHours(date),\r\n      this.getMinutes(date)\r\n    );\r\n\r\n    // It's possible to wind up in the wrong month if the original month has more days than the new\r\n    // month. In this case we want to go to the last day of the desired month.\r\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\r\n    // guarantee this.\r\n    if (this.getMonth(newDate) !== ((this.getMonth(date) + months) % 12 + 12) % 12) {\r\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\r\n    }\r\n\r\n    return newDate;\r\n  }\r\n\r\n  addCalendarDays(date: Date, days: number): Date {\r\n    return this._createDateWithOverflow(\r\n      this.getYear(date),\r\n      this.getMonth(date),\r\n      this.getDate(date) + days,\r\n      this.getHours(date),\r\n      this.getMinutes(date)\r\n    );\r\n  }\r\n\r\n  addCalendarHours(date: Date, hours: number): Date {\r\n    return this._createDateWithOverflow(\r\n      this.getYear(date),\r\n      this.getMonth(date),\r\n      this.getDate(date),\r\n      this.getHours(date) + hours,\r\n      this.getMinutes(date)\r\n    );\r\n  }\r\n\r\n  addCalendarMinutes(date: Date, minutes: number): Date {\r\n    return this._createDateWithOverflow(\r\n      this.getYear(date),\r\n      this.getMonth(date),\r\n      this.getDate(date),\r\n      this.getHours(date),\r\n      this.getMinutes(date) + minutes\r\n    );\r\n  }\r\n\r\n  toIso8601(date: Date): string {\r\n    return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\r\n  }\r\n\r\n  /**\r\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n   * invalid date for all other values.\r\n   */\r\n  deserialize(value: any): Date | null {\r\n    if (typeof value === 'string') {\r\n      if (!value) {\r\n        return null;\r\n      }\r\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\r\n      // string is the right format first.\r\n      if (ISO_8601_REGEX.test(value)) {\r\n        let date = new Date(value);\r\n        if (this.isValid(date)) {\r\n          return date;\r\n        }\r\n      }\r\n    }\r\n    return super.deserialize(value);\r\n  }\r\n\r\n  isDateInstance(obj: any) {\r\n    return obj instanceof Date;\r\n  }\r\n\r\n  isValid(date: Date) {\r\n    return !isNaN(date.getTime());\r\n  }\r\n\r\n  invalid(): Date {\r\n    return new Date(NaN);\r\n  }\r\n\r\n  /** Creates a date but allows the month and date to overflow. */\r\n  private _createDateWithOverflow(year: number, month: number, date: number, hours?: number, minutes?: number) {\r\n    const result = new Date(year, month, date, hours, minutes, 0);\r\n\r\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\r\n    // abbreviations for 19xx.\r\n    if (year >= 0 && year < 100) {\r\n      result.setFullYear(this.getYear(result) - 1900);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Pads a number to make it two digits.\r\n   * @param n The number to pad.\r\n   * @returns The padded number.\r\n   */\r\n  private _2digit(n: number) {\r\n    return ('00' + n).slice(-2);\r\n  }\r\n\r\n  /**\r\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n   * other browsers do not. We remove them to make output consistent and because they interfere with\r\n   * date parsing.\r\n   * @param str The string to strip direction characters from.\r\n   * @returns The stripped string.\r\n   */\r\n  private _stripDirectionalityCharacters(str: string) {\r\n    return str.replace(/[\\u200e\\u200f]/g, '');\r\n  }\r\n\r\n  /**\r\n   * When converting Date object to string, javascript built-in functions may return wrong\r\n   * results because it applies its internal DST rules. The DST rules around the world change\r\n   * very frequently, and the current valid rule is not always valid in previous years though.\r\n   * We work around this problem building a new Date object which has its internal UTC\r\n   * representation with the local date and time.\r\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\r\n   *    timeZone set to 'utc' to work fine.\r\n   * @param date Date from which we want to get the string representation according to dtf\r\n   * @returns A Date object with its UTC representation based on the passed in date info\r\n   */\r\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\r\n    const d = new Date(\r\n      Date.UTC(\r\n        date.getFullYear(),\r\n        date.getMonth(),\r\n        date.getDate(),\r\n        date.getHours(),\r\n        date.getMinutes(),\r\n        date.getSeconds(),\r\n        date.getMilliseconds()\r\n      )\r\n    );\r\n    return dtf.format(d);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { MatDateFormats } from './date-formats';\r\n\r\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\r\n  parse: {\r\n    date: null,\r\n    datetime: null,\r\n    time: null\r\n  },\r\n  display: {\r\n    date: { year: 'numeric', month: 'numeric', day: 'numeric' },\r\n    datetime: {\r\n      year: 'numeric',\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n      hours: 'numeric',\r\n      minutes: 'numeric'\r\n    },\r\n    time: { hours: 'numeric', minutes: 'numeric' },\r\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\r\n    monthDayLabel: { month: 'short', day: 'numeric' },\r\n    monthDayA11yLabel: { month: 'long', day: 'numeric' },\r\n    monthYearLabel: { year: 'numeric', month: 'short' },\r\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\r\n    timeLabel: { hours: 'numeric', minutes: 'numeric' }\r\n  }\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { NgModule } from '@angular/core';\r\nimport { DateAdapter } from './date-adapter';\r\nimport { MAT_DATE_FORMATS } from './date-formats';\r\nimport { NativeDateAdapter } from './native-date-adapter';\r\nimport { MAT_NATIVE_DATE_FORMATS } from './native-date-formats';\r\n\r\nexport * from './date-adapter';\r\nexport * from './date-formats';\r\nexport * from './native-date-adapter';\r\nexport * from './native-date-formats';\r\n\r\n@NgModule({\r\n  imports: [PlatformModule],\r\n  providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }]\r\n})\r\nexport class NativeDateModule {}\r\n\r\n@NgModule({\r\n  imports: [NativeDateModule],\r\n  providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }]\r\n})\r\nexport class MatNativeDateModule {}\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '../core/index';\r\n\r\n// TODO(mmalerba): See if we can clean this up at some point.\r\nimport * as momentNs from 'moment-timezone';\r\nexport type Moment = momentNs.Moment;\r\nconst moment = momentNs;\r\n\r\n/** Creates an array and fills it with values. */\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n  const valuesArray = Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    valuesArray[i] = valueFunction(i);\r\n  }\r\n  return valuesArray;\r\n}\r\n\r\n/** Adapts Moment.js Dates for use with Angular Material. */\r\n@Injectable()\r\nexport class MomentDateAdapter extends DateAdapter<Moment> {\r\n  // Note: all of the methods that accept a `Moment` input parameter immediately call `this.clone`\r\n  // on it. This is to ensure that we're working with a `Moment` that has the correct locale setting\r\n  // while avoiding mutating the original object passed to us. Just calling `.locale(...)` on the\r\n  // input would mutate the object.\r\n\r\n  private _localeData: {\r\n    firstDayOfWeek: number;\r\n    longMonths: string[];\r\n    shortMonths: string[];\r\n    dates: string[];\r\n    longDaysOfWeek: string[];\r\n    shortDaysOfWeek: string[];\r\n    narrowDaysOfWeek: string[];\r\n  };\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Inject(MAT_DATE_LOCALE)\r\n    dateLocale: string\r\n  ) {\r\n    super();\r\n    this.setLocale(dateLocale || moment.locale());\r\n  }\r\n\r\n  setLocale(locale: string) {\r\n    super.setLocale(locale);\r\n\r\n    const momentLocaleData = moment.localeData(locale);\r\n    this._localeData = {\r\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\r\n      longMonths: momentLocaleData.months(),\r\n      shortMonths: momentLocaleData.monthsShort(),\r\n      dates: range(31, i => this.createDate(2017, 0, i + 1).format('D')),\r\n      longDaysOfWeek: momentLocaleData.weekdays(),\r\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\r\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin()\r\n    };\r\n  }\r\n\r\n  getYear(date: Moment): number {\r\n    return this.clone(date).year();\r\n  }\r\n\r\n  getMonth(date: Moment): number {\r\n    return this.clone(date).month();\r\n  }\r\n\r\n  getDate(date: Moment): number {\r\n    return this.clone(date).date();\r\n  }\r\n\r\n  getHours(date: Moment): number {\r\n    return this.clone(date).hours();\r\n  }\r\n\r\n  setHours(date: Moment, value: number): void {\r\n    date.hours(value);\r\n  }\r\n\r\n  getMinutes(date: Moment): number {\r\n    return this.clone(date).minutes();\r\n  }\r\n\r\n  setMinutes(date: Moment, value: number): void {\r\n    date.minutes(value);\r\n  }\r\n\r\n  setSeconds(date: Moment, value: number, ms?: number): void {\r\n    date.seconds(value);\r\n    if (ms) {\r\n      date.milliseconds(ms);\r\n    }\r\n  }\r\n\r\n  getDayOfWeek(date: Moment): number {\r\n    return this.clone(date).day();\r\n  }\r\n\r\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\r\n    return style === 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\r\n  }\r\n\r\n  getDateNames(): string[] {\r\n    return this._localeData.dates;\r\n  }\r\n\r\n  getHourNames(): string[] {\r\n    // TODO SUPPORTS_INTL_API\r\n    return range(24, String);\r\n  }\r\n\r\n  getMinuteNames(): string[] {\r\n    // TODO SUPPORTS_INTL_API\r\n    return range(60, String);\r\n  }\r\n\r\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    if (style === 'long') {\r\n      return this._localeData.longDaysOfWeek;\r\n    }\r\n    if (style === 'short') {\r\n      return this._localeData.shortDaysOfWeek;\r\n    }\r\n    return this._localeData.narrowDaysOfWeek;\r\n  }\r\n\r\n  getYearName(date: Moment): string {\r\n    return this.clone(date).format('YYYY');\r\n  }\r\n\r\n  getFirstDayOfWeek(): number {\r\n    return this._localeData.firstDayOfWeek;\r\n  }\r\n\r\n  getNumDaysInMonth(date: Moment): number {\r\n    return this.clone(date).daysInMonth();\r\n  }\r\n\r\n  clone(date: Moment): Moment {\r\n    const obj = date ? moment(date) : moment();\r\n    return obj.locale(this.locale);\r\n  }\r\n\r\n  createDate(year: number, month: number, date: number, hours?: number, minutes?: number): Moment {\r\n    // Moment.js will create an invalid date if any of the components are out of bounds, but we\r\n    // explicitly check each case so we can throw more descriptive errors.\r\n    if (month < 0 || month > 11) {\r\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n    }\r\n\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n\r\n    const result = moment({ year, month, date, hours, minutes, seconds: 0 });\r\n\r\n    // If the result isn't valid, the date must have been out of bounds for this month.\r\n    if (!result.isValid()) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n\r\n    return result.locale(this.locale);\r\n  }\r\n\r\n  today(): Moment {\r\n    return moment().locale(this.locale);\r\n  }\r\n\r\n  parse(value: any, parseFormat: string | string[]): Moment | null {\r\n    if (parseFormat && value && typeof value === 'string') {\r\n      return moment(value, parseFormat, this.locale, true);\r\n    }\r\n    return value ? moment(value).locale(this.locale) : null;\r\n  }\r\n\r\n  format(date: Moment, displayFormat: string): string {\r\n    date = this.clone(date);\r\n    if (!this.isValid(date)) {\r\n      throw Error('MomentDateAdapter: Cannot format invalid date.');\r\n    }\r\n    return date.format(displayFormat);\r\n  }\r\n\r\n  addCalendarYears(date: Moment, years: number): Moment {\r\n    return this.clone(date).add({ years });\r\n  }\r\n\r\n  addCalendarMonths(date: Moment, months: number): Moment {\r\n    return this.clone(date).add({ months });\r\n  }\r\n\r\n  addCalendarDays(date: Moment, days: number): Moment {\r\n    return this.clone(date).add({ days });\r\n  }\r\n\r\n  addCalendarHours(date: Moment, hours: number): Moment {\r\n    return this.clone(date).add({ hours });\r\n  }\r\n\r\n  addCalendarMinutes(date: Moment, minutes: number): Moment {\r\n    return this.clone(date).add({ minutes });\r\n  }\r\n\r\n  toIso8601(date: Moment): string {\r\n    return this.clone(date).format();\r\n  }\r\n\r\n  /**\r\n   * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\r\n   * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\r\n   * string into null. Returns an invalid date for all other values.\r\n   */\r\n  deserialize(value: any): Moment | null {\r\n    let date;\r\n    if (value instanceof Date) {\r\n      date = moment(value);\r\n    }\r\n    if (typeof value === 'string') {\r\n      if (!value) {\r\n        return null;\r\n      }\r\n      date = moment(value, moment.ISO_8601).locale(this.locale);\r\n    }\r\n    if (date && this.isValid(date)) {\r\n      return date;\r\n    }\r\n    return super.deserialize(value);\r\n  }\r\n\r\n  isDateInstance(obj: any): boolean {\r\n    return moment.isMoment(obj) ? this.clone(obj).isValid() : moment(obj).isValid();\r\n  }\r\n\r\n  isValid(date: Moment): boolean {\r\n    return this.clone(date).isValid();\r\n  }\r\n\r\n  invalid(): Moment {\r\n    return moment.invalid();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { MatDateFormats } from '../core/index';\r\n\r\nexport const MAT_MOMENT_DATE_FORMATS: MatDateFormats = {\r\n  parse: {\r\n    date: ['YYYY-MM-DD', 'YYYY/MM/DD', 'll'],\r\n    datetime: ['YYYY-MM-DD HH:mm', 'YYYY/MM/DD HH:mm', 'll h:mma'],\r\n    time: ['H:mm', 'HH:mm', 'h:mm a', 'hh:mm a']\r\n  },\r\n  display: {\r\n    date: 'll',\r\n    datetime: 'll h:mma',\r\n    time: 'h:mm a',\r\n    dateA11yLabel: 'LL',\r\n    monthDayLabel: 'MMM D',\r\n    monthDayA11yLabel: 'MMMM D',\r\n    monthYearLabel: 'MMMM YYYY',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n    timeLabel: 'HH:mm'\r\n  }\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '../core/index';\r\nimport { MomentDateAdapter } from './moment-date-adapter';\r\nimport { MAT_MOMENT_DATE_FORMATS } from './moment-date-formats';\r\n\r\nexport * from './moment-date-adapter';\r\nexport * from './moment-date-formats';\r\nexport { DateAdapter, MatDateFormats, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '../core/index';\r\n\r\n@NgModule({\r\n  providers: [{ provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] }]\r\n})\r\nexport class MomentDateModule {}\r\n\r\n@NgModule({\r\n  imports: [MomentDateModule],\r\n  providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }]\r\n})\r\nexport class MatMomentDateModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** @docs-private */\r\nexport function createMissingDateImplError(provider: string) {\r\n  return Error(\r\n    `MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\r\n      `modules at your application root: MatNativeDateModule, MatMomentDateModule ` +\r\n      `or provide a custom implementation.`\r\n  );\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { MAT_DATE_FORMATS, MatDateFormats } from './core/index';\r\nimport { DateAdapter } from './core/index';\r\nimport { createMissingDateImplError } from './datepicker-errors';\r\n\r\nexport const CLOCK_RADIUS = 50;\r\nexport const CLOCK_INNER_RADIUS = 27.5;\r\nexport const CLOCK_OUTER_RADIUS = 41.25;\r\nexport const CLOCK_TICK_RADIUS = 7.0833;\r\n\r\nexport type ClockView = 'hour' | 'minute';\r\n\r\n/**\r\n * A clock that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: 'mat-clock-view',\r\n  templateUrl: 'clock-view.html',\r\n  exportAs: 'matClockView',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: {\r\n    role: 'clock',\r\n    '(mousedown)': '_handleMousedown($event)'\r\n  },\r\n  preserveWhitespaces: false\r\n})\r\nexport class MatClockView<D> implements AfterContentInit {\r\n  /**\r\n   * The time to display in this clock view. (the rest is ignored)\r\n   */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n  set activeDate(value: D) {\r\n    const oldActiveDate = this._activeDate;\r\n    const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\r\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\r\n\r\n    if (oldActiveDate && this._dateAdapter.compareDate(oldActiveDate, this._activeDate, 'minute')) {\r\n      this._init();\r\n    }\r\n  }\r\n  private _activeDate: D;\r\n\r\n  // The currently selected date.\r\n  @Input()\r\n  get selected(): D | null {\r\n    return this._selected;\r\n  }\r\n  set selected(value: D | null) {\r\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null {\r\n    return this._minDate;\r\n  }\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _minDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null {\r\n    return this._maxDate;\r\n  }\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _maxDate: D | null;\r\n\r\n  // A function used to filter which dates are selectable.\r\n  @Input() dateFilter: (date: D, unit?: string) => boolean;\r\n\r\n  @Input() clockStep = 1;\r\n\r\n  @Input() twelveHour = false;\r\n\r\n  // Whether the clock is in hour view.\r\n  @Input() hourView = true;\r\n\r\n  // Emits when the final time was selected.\r\n  @Output() readonly selectedTime = new EventEmitter<D>();\r\n\r\n  // Emits when the currently selected date changes.\r\n  @Output() readonly selectedChange = new EventEmitter<D>();\r\n\r\n  // Emits when the currently selected date changes.\r\n  @Output() readonly changeView = new EventEmitter<void>();\r\n\r\n  // Hours and Minutes representing the clock view.\r\n  _hours: Array<any> = [];\r\n  _minutes: Array<any> = [];\r\n\r\n  _selectedHour: number | null;\r\n  _selectedMinute: number | null;\r\n  _anteMeridian: boolean;\r\n\r\n  private mouseMoveListener: any;\r\n  private mouseUpListener: any;\r\n\r\n  get _hand(): any {\r\n    this._selectedHour = this._dateAdapter.getHours(this.activeDate);\r\n    this._selectedMinute = this._dateAdapter.getMinutes(this.activeDate);\r\n    let radius = CLOCK_OUTER_RADIUS;\r\n    let deg = 0;\r\n\r\n    if (this.twelveHour) {\r\n      this._selectedHour = this._selectedHour < 12 ? this._selectedHour : this._selectedHour - 12;\r\n      this._selectedHour = this._selectedHour === 0 ? 12 : this._selectedHour;\r\n    }\r\n\r\n    if (this.hourView) {\r\n      const outer = this._selectedHour > 0 && this._selectedHour < 13;\r\n      radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\r\n      if (this.twelveHour) {\r\n        radius = CLOCK_OUTER_RADIUS;\r\n      }\r\n      deg = Math.round(this._selectedHour * (360 / (24 / 2)));\r\n    } else {\r\n      deg = Math.round(this._selectedMinute * (360 / 60));\r\n    }\r\n\r\n    return {\r\n      transform: `rotate(${deg}deg)`,\r\n      height: `${radius}%`,\r\n      'margin-top': `${50 - radius}%`\r\n    };\r\n  }\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    private _element: ElementRef,\r\n    @Optional() public _dateAdapter: DateAdapter<D>,\r\n    @Optional()\r\n    @Inject(MAT_DATE_FORMATS)\r\n    private _dateFormats: MatDateFormats\r\n  ) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\r\n    }\r\n\r\n    this.mouseMoveListener = (event: any) => {\r\n      this._handleMousemove(event);\r\n    };\r\n    this.mouseUpListener = () => {\r\n      this._handleMouseup();\r\n    };\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._init();\r\n  }\r\n\r\n  // Handles mousedown events on the clock body.\r\n  _handleMousedown(event: any) {\r\n    this.setTime(event);\r\n    document.addEventListener('mousemove', this.mouseMoveListener);\r\n    document.addEventListener('touchmove', this.mouseMoveListener);\r\n    document.addEventListener('mouseup', this.mouseUpListener);\r\n    document.addEventListener('touchend', this.mouseUpListener);\r\n  }\r\n\r\n  _handleMousemove(event: any) {\r\n    event.preventDefault();\r\n    this.setTime(event);\r\n  }\r\n\r\n  _handleMouseup() {\r\n    document.removeEventListener('mousemove', this.mouseMoveListener);\r\n    document.removeEventListener('touchmove', this.mouseMoveListener);\r\n    document.removeEventListener('mouseup', this.mouseUpListener);\r\n    document.removeEventListener('touchend', this.mouseUpListener);\r\n  }\r\n\r\n  // Initializes this clock view.\r\n  _init() {\r\n    this._hours.length = 0;\r\n    this._minutes.length = 0;\r\n\r\n    const hourNames = this._dateAdapter.getHourNames();\r\n    const minuteNames = this._dateAdapter.getMinuteNames();\r\n\r\n    if (this.twelveHour) {\r\n      this._anteMeridian = this._dateAdapter.getHours(this.activeDate) < 12;\r\n\r\n      for (let i = 0; i < hourNames.length / 2; i++) {\r\n        const radian = i / 6 * Math.PI;\r\n        const radius = CLOCK_OUTER_RADIUS;\r\n        const date = this._dateAdapter.createDate(\r\n          this._dateAdapter.getYear(this.activeDate),\r\n          this._dateAdapter.getMonth(this.activeDate),\r\n          this._dateAdapter.getDate(this.activeDate),\r\n          this._anteMeridian ? i : i + 12\r\n        );\r\n        this._hours.push({\r\n          value: i,\r\n          displayValue: i === 0 ? '12' : hourNames[i],\r\n          enabled: !this.dateFilter || this.dateFilter(date, 'hour'),\r\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\r\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS\r\n        });\r\n      }\r\n    } else {\r\n      for (let i = 0; i < hourNames.length; i++) {\r\n        const radian = i / 6 * Math.PI;\r\n        const outer = i > 0 && i < 13;\r\n        const radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\r\n        const date = this._dateAdapter.createDate(\r\n          this._dateAdapter.getYear(this.activeDate),\r\n          this._dateAdapter.getMonth(this.activeDate),\r\n          this._dateAdapter.getDate(this.activeDate),\r\n          i\r\n        );\r\n        this._hours.push({\r\n          value: i,\r\n          displayValue: i === 0 ? '12' : hourNames[i],\r\n          enabled: !this.dateFilter || this.dateFilter(date, 'hour'),\r\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\r\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS,\r\n          fontSize: i > 0 && i < 13 ? '' : '80%'\r\n        });\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < minuteNames.length; i += 5) {\r\n      const radian = i / 30 * Math.PI;\r\n      const date = this._dateAdapter.createDate(\r\n        this._dateAdapter.getYear(this.activeDate),\r\n        this._dateAdapter.getMonth(this.activeDate),\r\n        this._dateAdapter.getDate(this.activeDate),\r\n        this._dateAdapter.getHours(this.activeDate),\r\n        i\r\n      );\r\n      this._minutes.push({\r\n        value: i,\r\n        displayValue: i === 0 ? '00' : minuteNames[i],\r\n        enabled: !this.dateFilter || this.dateFilter(date, 'minute'),\r\n        top: CLOCK_RADIUS - Math.cos(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS,\r\n        left: CLOCK_RADIUS + Math.sin(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS\r\n      });\r\n    }\r\n\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  // Set Time\r\n  private setTime(event: any) {\r\n    const trigger = this._element.nativeElement;\r\n    const triggerRect = trigger.getBoundingClientRect();\r\n    const width = trigger.offsetWidth;\r\n    const height = trigger.offsetHeight;\r\n    const pageX = event.pageX !== undefined ? event.pageX : event.touches[0].pageX;\r\n    const pageY = event.pageY !== undefined ? event.pageY : event.touches[0].pageY;\r\n    const x = width / 2 - (pageX - triggerRect.left - window.pageXOffset);\r\n    const y = height / 2 - (pageY - triggerRect.top - window.pageYOffset);\r\n    const unit = Math.PI / (this.hourView ? 6 : this.clockStep ? 30 / this.clockStep : 30);\r\n    const z = Math.sqrt(x * x + y * y);\r\n    const outer = this.hourView && z > (width * (CLOCK_OUTER_RADIUS / 100) + width * (CLOCK_INNER_RADIUS / 100)) / 2;\r\n\r\n    let radian = Math.atan2(-x, y);\r\n    if (radian < 0) {\r\n      radian = Math.PI * 2 + radian;\r\n    }\r\n    let value = Math.round(radian / unit);\r\n\r\n    const date = this._dateAdapter.clone(this.activeDate);\r\n\r\n    if (this.hourView) {\r\n      if (value === 12) {\r\n        value = 0;\r\n      }\r\n      value = this.twelveHour\r\n        ? this._anteMeridian ? value : value + 12\r\n        : outer ? (value === 0 ? 12 : value) : value === 0 ? 0 : value + 12;\r\n      this._dateAdapter.setHours(date, value);\r\n    } else {\r\n      if (this.clockStep) {\r\n        value *= this.clockStep;\r\n      }\r\n      if (value === 60) {\r\n        value = 0;\r\n      }\r\n      this._dateAdapter.setMinutes(date, value);\r\n    }\r\n\r\n    // validate if the resulting value is disabled and do not take action\r\n    if (this.dateFilter && !this.dateFilter(date, this.hourView ? 'hour' : 'minute')) {\r\n      return;\r\n    }\r\n\r\n    this.activeDate = date;\r\n    if (this.hourView) {\r\n      this.changeView.emit();\r\n      this.selectedChange.emit(this.activeDate);\r\n    } else {\r\n      this.selectedTime.emit(this.activeDate);\r\n    }\r\n  }\r\n\r\n  _focusActiveCell() {}\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\r\n  }\r\n}\r\n","import {\r\n  animate,\r\n  animateChild,\r\n  AnimationTriggerMetadata,\r\n  group,\r\n  keyframes,\r\n  query,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger\r\n} from '@angular/animations';\r\n\r\nexport const slideCalendar: AnimationTriggerMetadata = trigger('slideCalendar', [\r\n  transition('* => left', [\r\n    animate(\r\n      180,\r\n      keyframes([\r\n        style({ transform: 'translateX(50%)', offset: 0.5, opacity: 0 }),\r\n        style({ transform: 'translateX(-50%)', offset: 0.51, opacity: 0 }),\r\n        style({ transform: 'translateX(0)', offset: 1, opacity: 1 })\r\n      ])\r\n    )\r\n  ]),\r\n  transition('* => right', [\r\n    animate(\r\n      180,\r\n      keyframes([\r\n        style({ transform: 'translateX(-50%)', offset: 0.5, opacity: 0 }),\r\n        style({ transform: 'translateX(50%)', offset: 0.51, opacity: 0 }),\r\n        style({ transform: 'translateX(0)', offset: 1, opacity: 1 })\r\n      ])\r\n    )\r\n  ])\r\n]);\r\n\r\nexport const controlActive: AnimationTriggerMetadata = trigger('controlActive', [\r\n  transition('* => active', [\r\n    animate(\r\n      '0.4s linear',\r\n      keyframes([\r\n        style({ transform: 'scale(0.9)' }),\r\n        style({ transform: 'scale(1.1)' }),\r\n        style({ transform: 'scale(1)' })\r\n      ])\r\n    )\r\n  ])\r\n]);\r\n\r\nexport const transformPanel: AnimationTriggerMetadata = trigger('transformPanel', [\r\n  state('void', style({ opacity: 0, transform: 'scale(1, 0)' })),\r\n  state('enter', style({ opacity: 1, transform: 'scale(1, 1)' })),\r\n  transition(\r\n    'void => enter',\r\n    group([\r\n      query('@fadeInCalendar', animateChild()),\r\n      animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')\r\n    ])\r\n  ),\r\n  transition('* => void', animate('100ms linear', style({ opacity: 0 })))\r\n]);\r\n\r\nexport const fadeInCalendar: AnimationTriggerMetadata = trigger('fadeInCalendar', [\r\n  state('void', style({ opacity: 0 })),\r\n  state('enter', style({ opacity: 1 })),\r\n  transition('void => *', animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\r\n]);\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface MatDatepickerIntlCatalog {\r\n  calendarLabel: string;\r\n  openCalendarLabel: string;\r\n  prevMonthLabel: string;\r\n  nextMonthLabel: string;\r\n  prevYearLabel: string;\r\n  nextYearLabel: string;\r\n  setToAMLabel: string;\r\n  setToPMLabel: string;\r\n  switchToMinuteViewLabel: string;\r\n  switchToHourViewLabel: string;\r\n  switchToMonthViewLabel: string;\r\n  switchToYearViewLabel: string;\r\n  switchToYearsViewLabel: string;\r\n  buttonSubmitText: string;\r\n  buttonSubmitLabel: string;\r\n  buttonCancelText: string;\r\n  buttonCancelLabel: string;\r\n}\r\n\r\n/** Datepicker data that requires internationalization. */\r\n@Injectable({ providedIn: 'root' })\r\nexport class MatDatepickerIntl implements MatDatepickerIntlCatalog {\r\n  /**\r\n   * Stream that emits whenever the labels here are changed. Use this to notify\r\n   * components if the labels have changed after initialization.\r\n   */\r\n  readonly changes = new Subject<void>();\r\n\r\n  /** A label for the calendar popup (used by screen readers). */\r\n  calendarLabel = 'Calendar';\r\n\r\n  /** A label for the button used to open the calendar popup (used by screen readers). */\r\n  openCalendarLabel = 'Open calendar';\r\n\r\n  /** A label for the previous month button (used by screen readers). */\r\n  prevMonthLabel = 'Previous month';\r\n\r\n  /** A label for the next month button (used by screen readers). */\r\n  nextMonthLabel = 'Next month';\r\n\r\n  /** A label for the previous year button (used by screen readers). */\r\n  prevYearLabel = 'Previous year';\r\n\r\n  /** A label for the next year button (used by screen readers). */\r\n  nextYearLabel = 'Next year';\r\n\r\n  /** A label for the 'AM' button (used by screen readers). */\r\n  setToAMLabel = 'Set date to AM';\r\n\r\n  /** A label for the 'PM' button (used by screen readers). */\r\n  setToPMLabel = 'Set date to PM';\r\n\r\n  /** A label for the 'switch to minute view' button (used by screen readers). */\r\n  switchToMinuteViewLabel = 'Change to minute view';\r\n\r\n  /** A label for the 'switch to hour view' button (used by screen readers). */\r\n  switchToHourViewLabel = 'Change to hour view';\r\n\r\n  /** A label for the 'switch to month view' button (used by screen readers). */\r\n  switchToMonthViewLabel = 'Change to month view';\r\n\r\n  /** A label for the 'switch to year view' button (used by screen readers). */\r\n  switchToYearViewLabel = 'Change to year view';\r\n\r\n  /** A label for the 'switch to years view' button (used by screen readers). */\r\n  switchToYearsViewLabel = 'Change to years view';\r\n\r\n  /** Text for the 'submit' button. */\r\n  buttonSubmitText = 'Ok';\r\n\r\n  /** A label for the 'submit' button (used by screen readers). */\r\n  buttonSubmitLabel = 'Choose the current date';\r\n\r\n  /** Text for the 'cancel' button. */\r\n  buttonCancelText = 'Cancel';\r\n\r\n  /** A label for the 'cancel' button (used by screen readers). */\r\n  buttonCancelLabel = 'Cancel the date selection';\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\n\r\n/**\r\n * An internal class that represents the data corresponding to a single calendar cell.\r\n * @docs-private\r\n */\r\nexport class MatCalendarCell {\r\n  constructor(\r\n    public value: number,\r\n    public displayValue: string,\r\n    public ariaLabel: string,\r\n    public enabled: boolean\r\n  ) {}\r\n}\r\n\r\n/**\r\n * An internal component used to display calendar data in a table.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: '[mat-calendar-body]',\r\n  templateUrl: 'calendar-body.html',\r\n  // styleUrls: ['calendar-body.scss'],\r\n  host: {\r\n    class: 'mat-calendar-body',\r\n    role: 'grid',\r\n    'attr.aria-readonly': 'true'\r\n  },\r\n  exportAs: 'matCalendarBody',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class MatCalendarBody {\r\n  /** The label for the table. (e.g. \"Jan 2017\"). */\r\n  @Input() label: string;\r\n\r\n  /** The cells to display in the table. */\r\n  @Input() rows: MatCalendarCell[][];\r\n\r\n  /** The value in the table that corresponds to today. */\r\n  @Input() todayValue: number;\r\n\r\n  /** The value in the table that is active. */\r\n  @Input() activeValue: number;\r\n\r\n  /** The value in the table that is currently selected. */\r\n  @Input() selectedValue: number;\r\n\r\n  /** The minimum number of free cells needed to fit the label in the first row. */\r\n  @Input() labelMinRequiredCells: number;\r\n\r\n  /** The number of columns in the table. */\r\n  @Input() numCols = 7;\r\n\r\n  /** Whether to allow selection of disabled cells. */\r\n  @Input() allowDisabledSelection = false;\r\n\r\n  /** The cell number of the active cell in the table. */\r\n  @Input() activeCell = 0;\r\n\r\n  /**\r\n   * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\r\n   * maintained even as the table resizes.\r\n   */\r\n  @Input() cellAspectRatio = 0.55;\r\n\r\n  /** Emits when a new value is selected. */\r\n  @Output() readonly selectedValueChange = new EventEmitter<number>();\r\n\r\n  constructor(private _elementRef: ElementRef, private _ngZone: NgZone) {}\r\n\r\n  _cellClicked(cell: MatCalendarCell): void {\r\n    if (!this.allowDisabledSelection && !cell.enabled) {\r\n      return;\r\n    }\r\n    this.selectedValueChange.emit(cell.value);\r\n  }\r\n\r\n  /** The number of blank cells to put at the beginning for the first row. */\r\n  get _firstRowOffset(): number {\r\n    return this.rows && this.rows.length && this.rows[0].length\r\n      ? this.numCols - this.rows[0].length\r\n      : 0;\r\n  }\r\n\r\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\r\n    let cellNumber = rowIndex * this.numCols + colIndex;\r\n\r\n    // Account for the fact that the first row may not have as many cells.\r\n    if (rowIndex) {\r\n      cellNumber -= this._firstRowOffset;\r\n    }\r\n\r\n    return cellNumber === this.activeCell;\r\n  }\r\n\r\n  /** Focuses the active cell after the microtask queue is empty. */\r\n  _focusActiveCell() {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      this._ngZone.onStable\r\n        .asObservable()\r\n        .pipe(take(1))\r\n        .subscribe(() => {\r\n          this._elementRef.nativeElement.querySelector('.mat-calendar-body-active').focus();\r\n        });\r\n    });\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  DOWN_ARROW,\r\n  END,\r\n  ENTER,\r\n  HOME,\r\n  LEFT_ARROW,\r\n  PAGE_DOWN,\r\n  PAGE_UP,\r\n  RIGHT_ARROW,\r\n  UP_ARROW\r\n} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { MatCalendarBody, MatCalendarCell } from './calendar-body';\r\nimport { MAT_DATE_FORMATS, MatDateFormats } from './core/index';\r\nimport { DateAdapter } from './core/index';\r\nimport { slideCalendar } from './datepicker-animations';\r\nimport { createMissingDateImplError } from './datepicker-errors';\r\n\r\nconst DAYS_PER_WEEK = 7;\r\n\r\n/**\r\n * An internal component used to display a single month in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: 'mat-month-view',\r\n  templateUrl: 'month-view.html',\r\n  exportAs: 'matMonthView',\r\n  animations: [slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class MatMonthView<D> implements AfterContentInit {\r\n  /**\r\n   * The date to display in this month view (everything other than the month and year is ignored).\r\n   */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n  set activeDate(value: D) {\r\n    const oldActiveDate = this._activeDate;\r\n    const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\r\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\r\n    this._activeValue = this._getDateInCurrentMonth(this.activeDate);\r\n\r\n    if (oldActiveDate && !this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\r\n      this._init();\r\n    }\r\n  }\r\n  private _activeDate: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null {\r\n    return this._selected;\r\n  }\r\n  set selected(value: D | null) {\r\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._selectedDate = this._getDateInCurrentMonth(this._selected);\r\n  }\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null {\r\n    return this._minDate;\r\n  }\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _minDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null {\r\n    return this._maxDate;\r\n  }\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _maxDate: D | null;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D, unit?: string) => boolean;\r\n\r\n  /** Animations handler */\r\n  @Input() animationDir: string;\r\n\r\n  /** Emits when a new date is selected. */\r\n  @Output() readonly selectedChange = new EventEmitter<D | null>();\r\n\r\n  /** Emits when any date is selected. */\r\n  @Output() readonly _userSelection = new EventEmitter<void>();\r\n\r\n  /** Emits when any date is activated. */\r\n  @Output() readonly activeDateChange = new EventEmitter<D>();\r\n\r\n  /** The body of calendar table */\r\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\r\n\r\n  /** The label for this month (e.g. \"January 2017\"). */\r\n  _monthLabel: string;\r\n\r\n  /** Grid of calendar cells representing the dates of the month. */\r\n  _weeks: MatCalendarCell[][];\r\n\r\n  /** The number of blank cells in the first row before the 1st of the month. */\r\n  _firstWeekOffset: number;\r\n\r\n  /** The active date on the calendar. */\r\n  _activeValue: number | null;\r\n\r\n  /**\r\n   * The date of the month that the currently selected Date falls on.\r\n   * Null if the currently selected Date is in another month.\r\n   */\r\n  _selectedDate: number | null;\r\n\r\n  /** The date of the month that today falls on. Null if today is in another month. */\r\n  _todayDate: number | null;\r\n\r\n  /** The names of the weekdays. */\r\n  _weekdays: { long: string; narrow: string }[];\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    @Optional()\r\n    @Inject(MAT_DATE_FORMATS)\r\n    private _dateFormats: MatDateFormats,\r\n    @Optional() public _dateAdapter: DateAdapter<D>,\r\n    @Optional() private _dir?: Directionality\r\n  ) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\r\n    }\r\n\r\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\r\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\r\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\r\n\r\n    // Rotate the labels for days of the week based on the configured first day of the week.\r\n    const weekdays = longWeekdays.map((long, i) => {\r\n      return { long, narrow: narrowWeekdays[i].slice(0, 1) };\r\n    });\r\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._init();\r\n  }\r\n\r\n  /** Handles when a new date is selected. */\r\n  _dateSelected(date: number) {\r\n    if (this._selectedDate !== date) {\r\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\r\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\r\n      const selectedHours = this._dateAdapter.getHours(this.activeDate);\r\n      const selectedMinutes = this._dateAdapter.getMinutes(this.activeDate);\r\n      const selectedDate = this._dateAdapter.createDate(\r\n        selectedYear,\r\n        selectedMonth,\r\n        date,\r\n        selectedHours,\r\n        selectedMinutes\r\n      );\r\n\r\n      this.selectedChange.emit(selectedDate);\r\n    }\r\n\r\n    this._userSelection.emit();\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in month view. */\r\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\r\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\r\n    // disabled ones from being selected. This may not be ideal, we should look into whether\r\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\r\n\r\n    const oldActiveDate = this._activeDate;\r\n\r\n    const isRtl = this._isRtl();\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\r\n        break;\r\n      case HOME:\r\n        this.activeDate = this._dateAdapter.addCalendarDays(\r\n          this._activeDate,\r\n          1 - this._dateAdapter.getDate(this._activeDate)\r\n        );\r\n        break;\r\n      case END:\r\n        this.activeDate = this._dateAdapter.addCalendarDays(\r\n          this._activeDate,\r\n          this._dateAdapter.getNumDaysInMonth(this._activeDate) - this._dateAdapter.getDate(this._activeDate)\r\n        );\r\n        break;\r\n      case PAGE_UP:\r\n        this.activeDate = event.altKey\r\n          ? this._dateAdapter.addCalendarYears(this._activeDate, -1)\r\n          : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\r\n        break;\r\n      case PAGE_DOWN:\r\n        this.activeDate = event.altKey\r\n          ? this._dateAdapter.addCalendarYears(this._activeDate, 1)\r\n          : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\r\n        break;\r\n      case ENTER:\r\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\r\n          this._dateSelected(this._dateAdapter.getDate(this._activeDate));\r\n          this._userSelection.emit();\r\n          // Prevent unexpected default actions such as form submission.\r\n          event.preventDefault();\r\n        }\r\n        return;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\r\n      this.activeDateChange.emit(this.activeDate);\r\n    }\r\n\r\n    this._focusActiveCell();\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Initializes this month view. */\r\n  _init() {\r\n    this._activeValue = this._getDateInCurrentMonth(this.activeDate);\r\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\r\n    this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\r\n    this._monthLabel = this._dateAdapter\r\n      .getMonthNames('short')\r\n      [this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\r\n\r\n    const firstOfMonth = this._dateAdapter.createDate(\r\n      this._dateAdapter.getYear(this.activeDate),\r\n      this._dateAdapter.getMonth(this.activeDate),\r\n      1\r\n    );\r\n    this._firstWeekOffset =\r\n      (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) - this._dateAdapter.getFirstDayOfWeek()) %\r\n      DAYS_PER_WEEK;\r\n\r\n    this._createWeekCells();\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** Focuses the active cell after the microtask queue is empty. */\r\n  _focusActiveCell() {\r\n    this._matCalendarBody._focusActiveCell();\r\n  }\r\n\r\n  /** Creates MatCalendarCells for the dates in this month. */\r\n  private _createWeekCells() {\r\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\r\n    const dateNames = this._dateAdapter.getDateNames();\r\n    this._weeks = [[]];\r\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\r\n      if (cell === DAYS_PER_WEEK) {\r\n        this._weeks.push([]);\r\n        cell = 0;\r\n      }\r\n      const date = this._dateAdapter.createDate(\r\n        this._dateAdapter.getYear(this.activeDate),\r\n        this._dateAdapter.getMonth(this.activeDate),\r\n        i + 1\r\n      );\r\n      const enabled = this._shouldEnableDate(date);\r\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\r\n      this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\r\n    }\r\n  }\r\n\r\n  /** Date filter for the month */\r\n  private _shouldEnableDate(date: D): boolean {\r\n    return (\r\n      !!date &&\r\n      (!this.dateFilter || this.dateFilter(date, 'day')) &&\r\n      (!this.minDate || this._dateAdapter.compareDate(date, this.minDate, 'day') >= 0) &&\r\n      (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate, 'day') <= 0)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets the date in this month that the given Date falls on.\r\n   * Returns null if the given Date is in another month.\r\n   */\r\n  private _getDateInCurrentMonth(date: D | null): number | null {\r\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ? this._dateAdapter.getDate(date) : null;\r\n  }\r\n\r\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\r\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\r\n    return !!(d1 && d2 && this._dateAdapter.compareDate(d1, d2, 'month') === 0);\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\r\n  }\r\n\r\n  /** Determines whether the user has the RTL layout direction. */\r\n  private _isRtl() {\r\n    return this._dir && this._dir.value === 'rtl';\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  DOWN_ARROW,\r\n  END,\r\n  ENTER,\r\n  HOME,\r\n  LEFT_ARROW,\r\n  PAGE_DOWN,\r\n  PAGE_UP,\r\n  RIGHT_ARROW,\r\n  UP_ARROW\r\n} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { MatCalendarBody, MatCalendarCell } from './calendar-body';\r\nimport { MAT_DATE_FORMATS, MatDateFormats } from './core/index';\r\nimport { DateAdapter } from './core/index';\r\nimport { slideCalendar } from './datepicker-animations';\r\nimport { createMissingDateImplError } from './datepicker-errors';\r\n\r\n/**\r\n * An internal component used to display a single year in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: 'mat-year-view',\r\n  templateUrl: 'year-view.html',\r\n  exportAs: 'matYearView',\r\n  animations: [slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class MatYearView<D> implements AfterContentInit {\r\n  /** The date to display in this year view (everything other than the year is ignored). */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n  set activeDate(value: D) {\r\n    const oldActiveDate = this._activeDate;\r\n    const validDate =\r\n      this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\r\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\r\n\r\n    if (\r\n      oldActiveDate &&\r\n      this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)\r\n    ) {\r\n      this._init();\r\n    }\r\n  }\r\n  private _activeDate: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null {\r\n    return this._selected;\r\n  }\r\n  set selected(value: D | null) {\r\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._selectedMonth = this._getMonthInCurrentYear(this._selected);\r\n  }\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null {\r\n    return this._minDate;\r\n  }\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _minDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null {\r\n    return this._maxDate;\r\n  }\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _maxDate: D | null;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D, unit?: string) => boolean;\r\n\r\n  /** Animations handler */\r\n  @Input() animationDir: string;\r\n\r\n  /** Emits when a new month is selected. */\r\n  @Output() readonly selectedChange = new EventEmitter<D>();\r\n\r\n  /** Emits when any date is activated. */\r\n  @Output() readonly activeDateChange = new EventEmitter<D>();\r\n\r\n  /** The body of calendar table */\r\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\r\n\r\n  /** Grid of calendar cells representing the months of the year. */\r\n  _months: MatCalendarCell[][];\r\n\r\n  /** The label for this year (e.g. \"2017\"). */\r\n  _yearLabel: string;\r\n\r\n  /** The month in this year that today falls on. Null if today is in a different year. */\r\n  _todayMonth: number | null;\r\n\r\n  /**\r\n   * The month in this year that the selected Date falls on.\r\n   * Null if the selected Date is in a different year.\r\n   */\r\n  _selectedMonth: number | null;\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    @Optional()\r\n    @Inject(MAT_DATE_FORMATS)\r\n    private _dateFormats: MatDateFormats,\r\n    @Optional() public _dateAdapter: DateAdapter<D>,\r\n    @Optional() private _dir?: Directionality\r\n  ) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._init();\r\n  }\r\n\r\n  /** Handles when a new month is selected. */\r\n  _monthSelected(month: number) {\r\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(\r\n      this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1)\r\n    );\r\n    const selectedYear = this._dateAdapter.getYear(this.activeDate);\r\n    const selectedDay = this._dateAdapter.getDate(this.activeDate);\r\n    const selectedHours = this._dateAdapter.getHours(this.activeDate);\r\n    const selectedMinutes = this._dateAdapter.getMinutes(this.activeDate);\r\n    const date = this._dateAdapter.createDate(\r\n      selectedYear,\r\n      month,\r\n      Math.min(selectedDay, daysInMonth),\r\n      selectedHours,\r\n      selectedMinutes\r\n    );\r\n    this.selectedChange.emit(date);\r\n  }\r\n\r\n  /** Initializes this year view. */\r\n  _init() {\r\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\r\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\r\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\r\n\r\n    const monthNames = this._dateAdapter.getMonthNames('short');\r\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\r\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row =>\r\n      row.map(month => this._createCellForMonth(month, monthNames[month]))\r\n    );\r\n\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Gets the month in this year that the given Date falls on.\r\n   * Returns null if the given Date is in another year.\r\n   */\r\n  private _getMonthInCurrentYear(date: D | null) {\r\n    return date && this._dateAdapter.getYear(date) === this._dateAdapter.getYear(this.activeDate)\r\n      ? this._dateAdapter.getMonth(date)\r\n      : null;\r\n  }\r\n\r\n  /** Creates an MatCalendarCell for the given month. */\r\n  private _createCellForMonth(month: number, monthName: string) {\r\n    const ariaLabel = this._dateAdapter.format(\r\n      this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1),\r\n      this._dateFormats.display.monthYearA11yLabel\r\n    );\r\n    return new MatCalendarCell(\r\n      month,\r\n      monthName.toLocaleUpperCase(),\r\n      ariaLabel,\r\n      this._shouldEnableMonth(month)\r\n    );\r\n  }\r\n\r\n  /** Whether the given month is enabled. */\r\n  private _shouldEnableMonth(month: number) {\r\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\r\n\r\n    if (\r\n      month === undefined ||\r\n      month === null ||\r\n      this._isYearAndMonthAfterMaxDate(activeYear, month) ||\r\n      this._isYearAndMonthBeforeMinDate(activeYear, month)\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.dateFilter) {\r\n      return true;\r\n    }\r\n\r\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\r\n\r\n    // If any date in the month is enabled count the month as enabled.\r\n    for (\r\n      let d = firstOfMonth;\r\n      this._dateAdapter.getMonth(d) == month;\r\n      d = this._dateAdapter.addCalendarDays(d, 1)\r\n    ) {\r\n      if (this.dateFilter(d, 'day')) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Tests whether the combination month/year is after this.maxDate, considering\r\n   * just the month and year of this.maxDate\r\n   */\r\n  private _isYearAndMonthAfterMaxDate(year: number, month: number) {\r\n    if (this.maxDate) {\r\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\r\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\r\n\r\n      return year > maxYear || (year === maxYear && month > maxMonth);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Tests whether the combination month/year is before this.minDate, considering\r\n   * just the month and year of this.minDate\r\n   */\r\n  private _isYearAndMonthBeforeMinDate(year: number, month: number) {\r\n    if (this.minDate) {\r\n      const minYear = this._dateAdapter.getYear(this.minDate);\r\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\r\n\r\n      return year < minYear || (year === minYear && month < minMonth);\r\n    }\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in year view. */\r\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\r\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\r\n    // disabled ones from being selected. This may not be ideal, we should look into whether\r\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\r\n\r\n    const oldActiveDate = this._activeDate;\r\n\r\n    const isRtl = this._isRtl();\r\n    switch (event.keyCode) {\r\n      case LEFT_ARROW:\r\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\r\n        break;\r\n      case UP_ARROW:\r\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\r\n        break;\r\n      case HOME:\r\n        this.activeDate = this._dateAdapter.addCalendarMonths(\r\n          this._activeDate,\r\n          this._dateAdapter.getMonth(this._activeDate)\r\n        );\r\n        break;\r\n      case END:\r\n        this.activeDate = this._dateAdapter.addCalendarMonths(\r\n          this._activeDate,\r\n          11 - this._dateAdapter.getMonth(this._activeDate)\r\n        );\r\n        break;\r\n      case PAGE_UP:\r\n        this.activeDate = this._dateAdapter.addCalendarYears(\r\n          this._activeDate,\r\n          event.altKey ? -10 : -1\r\n        );\r\n        break;\r\n      case PAGE_DOWN:\r\n        this.activeDate = this._dateAdapter.addCalendarYears(\r\n          this._activeDate,\r\n          event.altKey ? 10 : 1\r\n        );\r\n        break;\r\n      case ENTER:\r\n        this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\r\n        break;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\r\n      this.activeDateChange.emit(this.activeDate);\r\n    }\r\n\r\n    this._focusActiveCell();\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  _focusActiveCell() {\r\n    this._matCalendarBody._focusActiveCell();\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\r\n  }\r\n\r\n  /** Determines whether the user has the RTL layout direction. */\r\n  private _isRtl() {\r\n    return this._dir && this._dir.value === 'rtl';\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { DOWN_ARROW, ENTER, UP_ARROW } from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { of as obsOf, fromEvent } from 'rxjs';\r\nimport { mergeMap, sampleTime } from 'rxjs/operators';\r\nimport { MAT_DATE_FORMATS, MatDateFormats } from './core/index';\r\nimport { DateAdapter } from './core/index';\r\nimport { createMissingDateImplError } from './datepicker-errors';\r\n\r\nconst YEAR_LINE_HEIGHT = 35;\r\n\r\n/**\r\n * An internal component used to display a year selector in the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: 'mat-years-view',\r\n  templateUrl: 'years-view.html',\r\n  exportAs: 'matYearsView',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class MatYearsView<D> implements AfterContentInit, OnDestroy {\r\n  /** The date to display in this view (everything other than the year is ignored). */\r\n  @Input()\r\n  get activeDate(): D {\r\n    return this._activeDate;\r\n  }\r\n  set activeDate(value: D) {\r\n    let oldActiveDate = this._activeDate;\r\n    const validDate =\r\n      this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\r\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\r\n\r\n    if (\r\n      oldActiveDate &&\r\n      this._dateAdapter.getYear(oldActiveDate) != this._dateAdapter.getYear(this._activeDate)\r\n    ) {\r\n      this._init();\r\n    }\r\n  }\r\n  private _activeDate: D;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null {\r\n    return this._selected;\r\n  }\r\n  set selected(value: D | null) {\r\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\r\n  }\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null {\r\n    return this._minDate;\r\n  }\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _minDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null {\r\n    return this._maxDate;\r\n  }\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _maxDate: D | null;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input() dateFilter: (date: D, unit?: string) => boolean;\r\n\r\n  /** Emits when a new month is selected. */\r\n  @Output() readonly selectedChange = new EventEmitter<D>();\r\n\r\n  /** List of years. */\r\n  _years: Array<{ value: number; enabled: boolean }> = [];\r\n\r\n  /** The selected year. */\r\n  _selectedYear: number | null;\r\n\r\n  /** Scroller subscription. */\r\n  _disposeScroller: Subscription;\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    private element: ElementRef,\r\n    @Optional() public _dateAdapter: DateAdapter<D>,\r\n    @Optional()\r\n    @Inject(MAT_DATE_FORMATS)\r\n    private _dateFormats: MatDateFormats\r\n  ) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    const lastPosition = { scrolled: 0 };\r\n    this._disposeScroller = fromEvent(this.element.nativeElement, 'scroll')\r\n      .pipe(sampleTime(300), mergeMap((ev: any) => obsOf(this._calculatePoints())))\r\n      .subscribe((pos: any) => this._handleScroll(pos, lastPosition));\r\n\r\n    this._init();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._disposeScroller.unsubscribe();\r\n  }\r\n\r\n  abs(value: number) {\r\n    return Math.abs(value);\r\n  }\r\n\r\n  /** Initializes this year view. */\r\n  _init() {\r\n    this._selectedYear = this._dateAdapter.getYear(this.selected ? this.selected : this.activeDate);\r\n\r\n    const date = this._dateAdapter.createDate(\r\n      this._selectedYear,\r\n      this._dateAdapter.getMonth(this.activeDate),\r\n      this._dateAdapter.getDate(this.activeDate),\r\n      this._dateAdapter.getHours(this.activeDate),\r\n      this._dateAdapter.getMinutes(this.activeDate)\r\n    );\r\n    this._years = [\r\n      {\r\n        value: this._selectedYear,\r\n        enabled: !this.dateFilter || this.dateFilter(date, 'minute')\r\n      }\r\n    ];\r\n\r\n    this._populateYears();\r\n\r\n    setTimeout(() => {\r\n      this.element.nativeElement.scrollTop -=\r\n        this.element.nativeElement.offsetHeight / 2 - YEAR_LINE_HEIGHT / 2;\r\n    }, 20);\r\n  }\r\n\r\n  _populateYears(down = false) {\r\n    if (\r\n      (!down && !this._years[0].enabled) ||\r\n      (down && !this._years[this._years.length - 1].enabled)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\r\n    const selectedDay = this._dateAdapter.getDate(this.activeDate);\r\n    const selectedHours = this._dateAdapter.getHours(this.activeDate);\r\n    const selectedMinutes = this._dateAdapter.getMinutes(this.activeDate);\r\n\r\n    let scroll = 0;\r\n    for (let y = 1; y <= 10; y++) {\r\n      let year = this._years[this._years.length - 1].value;\r\n      let date = this._dateAdapter.createDate(\r\n        year + 1,\r\n        selectedMonth,\r\n        selectedDay,\r\n        selectedHours,\r\n        selectedMinutes\r\n      );\r\n      this._years.push({\r\n        value: year + 1,\r\n        enabled: !this.dateFilter || this.dateFilter(date, 'minute')\r\n      });\r\n\r\n      year = this._years[0].value;\r\n      date = this._dateAdapter.createDate(\r\n        year - 1,\r\n        selectedMonth,\r\n        selectedDay,\r\n        selectedHours,\r\n        selectedMinutes\r\n      );\r\n      this._years.unshift({\r\n        value: year - 1,\r\n        enabled: !this.dateFilter || this.dateFilter(date, 'minute')\r\n      });\r\n\r\n      scroll += YEAR_LINE_HEIGHT;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.element.nativeElement.scrollTop += down ? YEAR_LINE_HEIGHT : scroll;\r\n    }, 10);\r\n\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  _yearSelected(year: number) {\r\n    const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\r\n    const selectedDay = this._dateAdapter.getDate(this.activeDate);\r\n    const selectedHours = this._dateAdapter.getHours(this.activeDate);\r\n    const selectedMinutes = this._dateAdapter.getMinutes(this.activeDate);\r\n    this.selectedChange.emit(\r\n      this._dateAdapter.createDate(year, selectedMonth, selectedDay, selectedHours, selectedMinutes)\r\n    );\r\n  }\r\n\r\n  _calculatePoints() {\r\n    const el = this.element.nativeElement;\r\n    return {\r\n      height: el.offsetHeight,\r\n      scrolled: el.scrollTop,\r\n      total: el.scrollHeight\r\n    };\r\n  }\r\n\r\n  _handleScroll(position, lastPosition) {\r\n    if (position.scrolled === 0 && lastPosition.scrolled > 0) {\r\n      this._populateYears(false);\r\n    } else if (position.height + position.scrolled === position.total) {\r\n      this._populateYears(true);\r\n    }\r\n    lastPosition.scrolled = position.scrolled;\r\n  }\r\n\r\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\r\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\r\n    // TODO handle @angular/cdk/keycode\r\n    switch (event.keyCode) {\r\n      case UP_ARROW:\r\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -1);\r\n        break;\r\n      case DOWN_ARROW:\r\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, 1);\r\n        break;\r\n      case ENTER:\r\n        this._yearSelected(this._dateAdapter.getYear(this._activeDate));\r\n        break;\r\n      default:\r\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n        return;\r\n    }\r\n\r\n    this._focusActiveCell();\r\n    // Prevent unexpected default actions such as form submission.\r\n    event.preventDefault();\r\n  }\r\n\r\n  _focusActiveCell() {}\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  AfterContentInit,\r\n  AfterViewChecked,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { MatClockView } from './clock-view';\r\nimport { MAT_DATE_FORMATS, MatDateFormats } from './core/index';\r\nimport { DateAdapter } from './core/index';\r\nimport { controlActive, slideCalendar } from './datepicker-animations';\r\nimport { createMissingDateImplError } from './datepicker-errors';\r\nimport { MatDatepickerIntl } from './datepicker-intl';\r\nimport { MatMonthView } from './month-view';\r\nimport { MatYearView } from './year-view';\r\nimport { MatYearsView } from './years-view';\r\n\r\n/**\r\n * Possible views for the calendar.\r\n * @docs-private\r\n */\r\nexport type MatCalendarView = 'clock' | 'month' | 'year' | 'years';\r\n\r\n/**\r\n * Possible return types.\r\n * @docs-private\r\n */\r\nexport type MatCalendarType = 'date' | 'datetime' | 'time';\r\n\r\n/**\r\n * A calendar that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: 'mat-calendar',\r\n  templateUrl: 'calendar.html',\r\n  // styleUrls: ['calendar.css'],\r\n  host: {\r\n    class: 'mat-calendar'\r\n  },\r\n  animations: [controlActive, slideCalendar],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class MatCalendar<D> implements AfterContentInit, AfterViewChecked, OnChanges, OnDestroy {\r\n  private _intlChanges: Subscription;\r\n\r\n  /**\r\n   * Used for scheduling that focus should be moved to the active cell on the next tick.\r\n   * We need to schedule it, rather than do it immediately, because we have to wait\r\n   * for Angular to re-evaluate the view children.\r\n   */\r\n  private _moveFocusOnNextTick = false;\r\n\r\n  /** A date representing the period (month or year) to start the calendar in. */\r\n  @Input()\r\n  get startAt(): D | null {\r\n    return this._startAt;\r\n  }\r\n  set startAt(value: D | null) {\r\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _startAt: D | null;\r\n\r\n  /** The type of value handled by the calendar. */\r\n  @Input()\r\n  type: MatCalendarType = 'date';\r\n\r\n  /** Which view the calendar should be started in. */\r\n  @Input()\r\n  startView: MatCalendarView = 'month';\r\n\r\n  /** Current calendar view */\r\n  view: MatCalendarView;\r\n\r\n  /** The currently selected date. */\r\n  @Input()\r\n  get selected(): D | null {\r\n    return this._selected;\r\n  }\r\n  set selected(value: D | null) {\r\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this.activeDate = this._selected;\r\n  }\r\n  private _selected: D | null;\r\n\r\n  /** The minimum selectable date. */\r\n  @Input()\r\n  get minDate(): D | null {\r\n    return this._minDate;\r\n  }\r\n  set minDate(value: D | null) {\r\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _minDate: D | null;\r\n\r\n  /** The maximum selectable date. */\r\n  @Input()\r\n  get maxDate(): D | null {\r\n    return this._maxDate;\r\n  }\r\n  set maxDate(value: D | null) {\r\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _maxDate: D | null;\r\n\r\n  /** A function used to filter which dates are selectable. */\r\n  @Input()\r\n  dateFilter: (date: D, unit?: string) => boolean;\r\n\r\n  /** Clock interval */\r\n  @Input()\r\n  clockStep = 1;\r\n\r\n  /** Clock hour format */\r\n  @Input()\r\n  twelveHour = false;\r\n\r\n  /** Emits when the currently selected date changes. */\r\n  @Output()\r\n  selectedChange = new EventEmitter<D>();\r\n\r\n  /** Emits when any date is selected. */\r\n  @Output()\r\n  _userSelection = new EventEmitter<void>();\r\n\r\n  /** Reference to the current clock view component. */\r\n  @ViewChild(MatClockView)\r\n  clockView: MatClockView<D>;\r\n\r\n  /** Reference to the current month view component. */\r\n  @ViewChild(MatMonthView)\r\n  monthView: MatMonthView<D>;\r\n\r\n  /** Reference to the current year view component. */\r\n  @ViewChild(MatYearView)\r\n  yearView: MatYearView<D>;\r\n\r\n  /** Reference to the current years view component. */\r\n  @ViewChild(MatYearsView)\r\n  yearsView: MatYearsView<D>;\r\n\r\n  /** Date filter for the month and year views. */\r\n  _dateFilterForViews = (date: D, unit = 'minute') => {\r\n    return (\r\n      !!date &&\r\n      (!this.dateFilter || this.dateFilter(date)) &&\r\n      (!this.minDate || this._dateAdapter.compareDate(date, this.minDate, unit) >= 0) &&\r\n      (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate, unit) <= 0)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * The current active date. This determines which time period is shown and which date is\r\n   * highlighted when using keyboard navigation.\r\n   */\r\n  get activeDate(): D {\r\n    return this._clampedActiveDate;\r\n  }\r\n  set activeDate(value: D) {\r\n    const oldActiveDate = this._clampedActiveDate;\r\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\r\n    this._isAm = this._dateAdapter.getHours(this._clampedActiveDate) < 12;\r\n\r\n    const unit = this.view === 'year' ? 'year' : 'month';\r\n    const diff = this._dateAdapter.compareDate(oldActiveDate, this._clampedActiveDate, unit);\r\n    if (diff) {\r\n      this._animationDir = diff > 0 ? 'left' : 'right';\r\n    }\r\n\r\n    // update the labels\r\n    const day = this._dateAdapter.getDayOfWeek(this.activeDate);\r\n    let hours = this._dateAdapter.getHours(this.activeDate);\r\n    if (this.twelveHour) {\r\n      hours = hours === 0 ? 12 : hours > 12 ? hours - 12 : hours;\r\n    }\r\n    const minutes = this._dateAdapter.getMinutes(this.activeDate);\r\n\r\n    switch (this.view) {\r\n      case 'year':\r\n        this._periodButtonText = this._dateAdapter.getYearName(this.activeDate);\r\n        break;\r\n      default:\r\n        this._periodButtonText = this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthYearLabel);\r\n    }\r\n    this._yearButtonText = this._dateAdapter.getYear(this.activeDate).toString();\r\n    this._monthdayButtonText = this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthDayLabel);\r\n    this._dayButtonText = this._dateAdapter.getDayOfWeekNames('long')[day];\r\n    this._hourButtonText = hours.toString();\r\n    this._minuteButtonText = ('00' + minutes).slice(-2);\r\n\r\n    this.stateChanges.next();\r\n  }\r\n  private _clampedActiveDate: D;\r\n\r\n  /** Whether the calendar is in month view. */\r\n  get currentView(): MatCalendarView {\r\n    return this._currentView;\r\n  }\r\n  set currentView(value: MatCalendarView) {\r\n    this._currentView = value;\r\n    this._moveFocusOnNextTick = true;\r\n  }\r\n  private _currentView: MatCalendarView;\r\n\r\n  /**\r\n   * Emits whenever there is a state change that the header may need to respond to.\r\n   */\r\n  stateChanges = new Subject<void>();\r\n\r\n  /** Animations handler */\r\n  _animationDir: string;\r\n\r\n  /** Whether the active date is AM or not */\r\n  _isAm: boolean;\r\n\r\n  /** Whether the calendar process the time. */\r\n  _hasTime: boolean;\r\n\r\n  /** Whether the calendar is in hour view. */\r\n  _hourView: boolean = true;\r\n\r\n  /** The label for the calendar header buttons. */\r\n  _yearButtonText: string;\r\n\r\n  _dayButtonText: string;\r\n\r\n  _monthdayButtonText: string;\r\n\r\n  _hourButtonText: string;\r\n\r\n  _minuteButtonText: string;\r\n\r\n  /** The label for the current calendar view. */\r\n  _periodButtonText: string;\r\n\r\n  _periodButtonLabel: string;\r\n\r\n  /** The label for the the previous button. */\r\n  _prevButtonLabel: string;\r\n\r\n  /** The label for the the next button. */\r\n  _nextButtonLabel: string;\r\n\r\n  constructor(\r\n    public _intl: MatDatepickerIntl,\r\n    @Optional() private _dateAdapter: DateAdapter<D>,\r\n    @Optional()\r\n    @Inject(MAT_DATE_FORMATS)\r\n    private _dateFormats: MatDateFormats,\r\n    changeDetectorRef: ChangeDetectorRef\r\n  ) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\r\n    }\r\n\r\n    this._intlChanges = _intl.changes.subscribe(() => {\r\n      changeDetectorRef.markForCheck();\r\n      this.stateChanges.next();\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.activeDate = this.startAt || this._dateAdapter.today();\r\n\r\n    this.changeView(this.startView, false);\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (this._moveFocusOnNextTick) {\r\n      this._moveFocusOnNextTick = false;\r\n      this.focusActiveCell();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._intlChanges.unsubscribe();\r\n    this.stateChanges.complete();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this._hasTime = this.type.indexOf('time') >= 0;\r\n    const change = changes.selected || changes.minDate || changes.maxDate || changes.dateFilter;\r\n\r\n    if (change && !change.firstChange) {\r\n      const view = this._getCurrentViewComponent();\r\n      if (view) {\r\n        view._init();\r\n      }\r\n    }\r\n\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  changeView(view, focus = true) {\r\n    switch (view) {\r\n      case 'year':\r\n        this._periodButtonText = this._dateAdapter.getYearName(this.activeDate);\r\n        this._periodButtonLabel = this._intl.switchToYearsViewLabel;\r\n        this._nextButtonLabel = this._intl.nextYearLabel;\r\n        this._prevButtonLabel = this._intl.prevYearLabel;\r\n        break;\r\n      case 'month':\r\n        this._periodButtonText = this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthYearLabel);\r\n        this._periodButtonLabel = this._intl.switchToYearViewLabel;\r\n        this._nextButtonLabel = this._intl.nextMonthLabel;\r\n        this._prevButtonLabel = this._intl.prevMonthLabel;\r\n    }\r\n\r\n    this.view = view;\r\n    if (focus) {\r\n      this._moveFocusOnNextTick = true;\r\n    }\r\n  }\r\n\r\n  focusActiveCell() {\r\n    this._getCurrentViewComponent()._focusActiveCell();\r\n  }\r\n\r\n  _submitClicked(): void {\r\n    this.selectedChange.emit(this.activeDate);\r\n    this._userSelection.emit();\r\n  }\r\n\r\n  _cancelClicked(): void {\r\n    this._userSelection.emit();\r\n  }\r\n\r\n  /** Handles date selection in the clock view. */\r\n  _timeChanged(date: D): void {\r\n    this.selected = date;\r\n  }\r\n\r\n  _timeSelected(date: D): void {\r\n    // if (this.autoOk && this.type === 'time') {\r\n    //   this.selectedChange.emit(date);\r\n    //   this._userSelection.emit();\r\n    // }\r\n    this.selected = date;\r\n  }\r\n\r\n  /** Handles date selection in the month view. */\r\n  _dateSelected(date: D): void {\r\n    this.selected = date;\r\n    if (this._hasTime) {\r\n      this.changeView('clock');\r\n    }\r\n  }\r\n\r\n  /** Handles month selection in the year view. */\r\n  _monthSelected(month: D): void {\r\n    this.selected = month;\r\n    this.changeView('month');\r\n  }\r\n\r\n  _yearSelected(year: D): void {\r\n    this.selected = year;\r\n    this.changeView('year');\r\n  }\r\n\r\n  /** Handles user clicks on the period label. */\r\n  _currentPeriodClicked(): void {\r\n    this.changeView(this.view === 'month' ? 'year' : 'years');\r\n  }\r\n\r\n  /** Handles user clicks on the previous button. */\r\n  _previousClicked(): void {\r\n    this._navCalendar(-1);\r\n  }\r\n\r\n  /** Handles user clicks on the next button. */\r\n  _nextClicked(): void {\r\n    this._navCalendar(1);\r\n  }\r\n\r\n  /** Handles user clicks on the time labels. */\r\n  _showHourView(): void {\r\n    if (this._hasTime) {\r\n      this._hourView = true;\r\n      this.changeView('clock');\r\n    }\r\n  }\r\n\r\n  _showMinuteView(): void {\r\n    this._hourView = false;\r\n    this.changeView('clock');\r\n  }\r\n\r\n  _toggleAmPm(am): void {\r\n    this._isAm = !this._isAm;\r\n    const date = this._dateAdapter.addCalendarHours(this.activeDate, this._isAm ? -12 : 12);\r\n    if (this._dateFilterForViews(date, 'minute')) {\r\n      this.selected = date;\r\n    }\r\n\r\n    // if (this._isAm !== am) {\r\n    //   const date = this._dateAdapter.addCalendarHours(this.activeDate, this._isAm ? 12 : -12);\r\n    //   if (this._dateFilterForViews(date, 'minute')) {\r\n    //     this.selected = date;\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  /** Whether the previous period button is enabled. */\r\n  _previousEnabled(): boolean {\r\n    if (!this.minDate) {\r\n      return true;\r\n    }\r\n    return !this.minDate || !this._isSameView(this.activeDate, this.minDate);\r\n  }\r\n\r\n  /** Whether the next period button is enabled. */\r\n  _nextEnabled(): boolean {\r\n    return !this.maxDate || !this._isSameView(this.activeDate, this.maxDate);\r\n  }\r\n\r\n  /** Handles calendar diffs. */\r\n  _navCalendar(diff): void {\r\n    switch (this.view) {\r\n      case 'year':\r\n        this.activeDate = this._dateAdapter.addCalendarYears(this.activeDate, diff);\r\n        break;\r\n      case 'month':\r\n        this.activeDate = this._dateAdapter.addCalendarMonths(this.activeDate, diff);\r\n        break;\r\n      case 'clock':\r\n        this.activeDate = this._hourView\r\n          ? this._dateAdapter.addCalendarHours(this.activeDate, diff)\r\n          : this._dateAdapter.addCalendarMinutes(this.activeDate, diff);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\r\n  private _isSameView(date1: D, date2: D): boolean {\r\n    switch (this.view) {\r\n      case 'year':\r\n        return this._dateAdapter.getYear(date1) === this._dateAdapter.getYear(date2);\r\n      case 'month':\r\n        const monthYear = this._dateFormats.display.monthYearLabel;\r\n        return this._dateAdapter.format(date1, monthYear) === this._dateAdapter.format(date2, monthYear);\r\n      case 'clock':\r\n        const hourMinute = this._dateFormats.display.timeLabel;\r\n        return this._dateAdapter.format(date1, hourMinute) === this._dateAdapter.format(date2, hourMinute);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\r\n  }\r\n\r\n  /** Returns the component instance that corresponds to the current calendar view. */\r\n  private _getCurrentViewComponent() {\r\n    return this.clockView || this.monthView || this.yearView || this.yearsView;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { ESCAPE, UP_ARROW } from '@angular/cdk/keycodes';\r\nimport {\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  PositionStrategy,\r\n  ScrollStrategy\r\n} from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ComponentRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { take, filter } from 'rxjs/operators';\r\nimport { merge, Subject, Subscription } from 'rxjs';\r\nimport { MatCalendar, MatCalendarType, MatCalendarView } from './calendar';\r\nimport { DateAdapter } from './core/index';\r\nimport { fadeInCalendar, transformPanel } from './datepicker-animations';\r\nimport { createMissingDateImplError } from './datepicker-errors';\r\nimport { MatDatepickerInput } from './datepicker-input';\r\n\r\n/** Used to generate a unique ID for each datepicker instance. */\r\nlet datepickerUid = 0;\r\n\r\n/** Injection token that determines the scroll handling while the calendar is open. */\r\nexport const MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken<() => ScrollStrategy>(\r\n  'mat-datepicker-scroll-strategy'\r\n);\r\n\r\n/** @docs-private */\r\nexport function MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\r\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY\r\n};\r\n\r\n/**\r\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\r\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\r\n * place to put additional features of the popup that are not part of the calendar itself in the\r\n * future. (e.g. confirmation buttons).\r\n * @docs-private\r\n */\r\n@Component({\r\n  selector: 'mat-datepicker-content',\r\n  templateUrl: 'datepicker-content.html',\r\n  // styleUrls: ['datepicker-content.scss'],\r\n  host: {\r\n    class: 'mat-datepicker-content',\r\n    '[@transformPanel]': '\"enter\"',\r\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\r\n    '(keydown)': '_handleKeydown($event)'\r\n  },\r\n  animations: [transformPanel, fadeInCalendar],\r\n  exportAs: 'matDatepickerContent',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class MatDatepickerContent<D> implements AfterViewInit {\r\n  /** Reference to the internal calendar component. */\r\n  @ViewChild(MatCalendar) _calendar: MatCalendar<D>;\r\n\r\n  /** Reference to the datepicker that created the overlay. */\r\n  datepicker: MatDatepicker<D>;\r\n\r\n  /** Whether the datepicker is above or below the input. */\r\n  _isAbove: boolean;\r\n\r\n  ngAfterViewInit() {\r\n    this._calendar.focusActiveCell();\r\n  }\r\n\r\n  /**\r\n   * Handles keydown event on datepicker content.\r\n   * @param event The event.\r\n   */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    if (event.keyCode === ESCAPE) {\r\n      this.datepicker.close();\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\r\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\r\n// if angular adds support for `exportAs: '$implicit'` on directives.\r\n/** Component responsible for managing the datepicker popup/dialog. */\r\n@Component({\r\n  selector: 'mat-datepicker',\r\n  template: '',\r\n  exportAs: 'matDatepicker',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false\r\n})\r\nexport class MatDatepicker<D> implements OnInit, OnDestroy {\r\n  /** The date to open the calendar to initially. */\r\n  @Input()\r\n  get startAt(): D | null {\r\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\r\n    // selected value is.\r\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\r\n  }\r\n  set startAt(value: D | null) {\r\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n  }\r\n  private _startAt: D | null;\r\n\r\n  /** The type of value handled by the calendar. */\r\n  @Input() type: MatCalendarType = 'date';\r\n\r\n  /** Which view the calendar should be started in. */\r\n  @Input() startView: MatCalendarView = 'month';\r\n\r\n  /** Clock interval */\r\n  @Input() clockStep = 1;\r\n\r\n  /** Clock hour format */\r\n  @Input() twelveHour = true;\r\n\r\n  /**\r\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\r\n   * than a popup and elements have more padding to allow for bigger touch targets.\r\n   */\r\n  @Input()\r\n  get touchUi(): boolean {\r\n    return this._touchUi;\r\n  }\r\n  set touchUi(value: boolean) {\r\n    this._touchUi = coerceBooleanProperty(value);\r\n  }\r\n  private _touchUi = true;\r\n\r\n  /** Whether the datepicker pop-up should be disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled === undefined && this._datepickerInput\r\n      ? this._datepickerInput.disabled\r\n      : !!this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    const newValue = coerceBooleanProperty(value);\r\n\r\n    if (newValue !== this._disabled) {\r\n      this._disabled = newValue;\r\n      this._disabledChange.next(newValue);\r\n    }\r\n  }\r\n  private _disabled: boolean;\r\n\r\n  /** Whether the datepicker is connected to a date type one */\r\n  @Input()\r\n  set matDatepicker(value: MatDatepicker<D>) {\r\n    if (value) {\r\n      this._datepicker = value;\r\n    }\r\n  }\r\n  _datepicker: MatDatepicker<D>;\r\n\r\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\r\n  @Input() panelClass: string | string[];\r\n\r\n  /** Emits when the datepicker has been opened. */\r\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Emits when the datepicker has been closed. */\r\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /** Whether the calendar is open. */\r\n  @Input()\r\n  get opened(): boolean {\r\n    return this._opened;\r\n  }\r\n  set opened(value: boolean) {\r\n    value ? this.open() : this.close();\r\n  }\r\n  private _opened = false;\r\n\r\n  /** The id for the datepicker calendar. */\r\n  id = `mat-datepicker-${datepickerUid++}`;\r\n\r\n  /** The currently selected date. */\r\n  get _selected(): D | null {\r\n    return this._validSelected;\r\n  }\r\n  set _selected(value: D | null) {\r\n    const valid = this._dateAdapter.clampDate(value, this._minDate, this._maxDate);\r\n    if (valid) {\r\n      // round the minutes\r\n      let minutes = this._dateAdapter.getMinutes(valid);\r\n      minutes = Math.round(minutes / this.clockStep) * this.clockStep;\r\n      this._dateAdapter.setMinutes(valid, minutes);\r\n      this._dateAdapter.setSeconds(valid, 0);\r\n    }\r\n    this._validSelected = valid;\r\n  }\r\n  private _validSelected: D | null = null;\r\n\r\n  /** The minimum selectable date. */\r\n  get _minDate(): D | null {\r\n    return this._datepickerInput && this._datepickerInput.min;\r\n  }\r\n\r\n  /** The maximum selectable date. */\r\n  get _maxDate(): D | null {\r\n    return this._datepickerInput && this._datepickerInput.max;\r\n  }\r\n\r\n  get _dateFilter(): (date: D | null, unit?: string) => boolean {\r\n    return this._datepickerInput && this._datepickerInput._dateFilter;\r\n  }\r\n\r\n  /** A reference to the overlay when the calendar is opened as a popup. */\r\n  _popupRef: OverlayRef;\r\n\r\n  /** A reference to the dialog when the calendar is opened as a dialog. */\r\n  private _dialogRef: MatDialogRef<MatDatepickerContent<D>> | null;\r\n\r\n  /** A portal containing the calendar for this datepicker. */\r\n  private _calendarPortal: ComponentPortal<MatDatepickerContent<D>>;\r\n\r\n  /** Reference to the component instantiated in popup mode. */\r\n  private _popupComponentRef: ComponentRef<MatDatepickerContent<D>> | null;\r\n\r\n  /** The element that was focused before the datepicker was opened. */\r\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\r\n\r\n  /** Subscription to value changes in the associated input element. */\r\n  private _inputSubscription = Subscription.EMPTY;\r\n\r\n  /** The input element this datepicker is associated with. */\r\n  _datepickerInput: MatDatepickerInput<D>;\r\n\r\n  /** Emits when the datepicker is disabled. */\r\n  readonly _disabledChange = new Subject<boolean>();\r\n\r\n  /** Emits new selected date when selected date changes. */\r\n  readonly _selectedChanged = new Subject<D>();\r\n\r\n  constructor(\r\n    private _dialog: MatDialog,\r\n    private _overlay: Overlay,\r\n    private _ngZone: NgZone,\r\n    private _viewContainerRef: ViewContainerRef,\r\n    @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) private _scrollStrategy,\r\n    @Optional() public _dateAdapter: DateAdapter<D>,\r\n    @Optional() private _dir: Directionality,\r\n    @Optional()\r\n    @Inject(DOCUMENT)\r\n    private _document: any\r\n  ) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // prevent inconsistent type and view\r\n    switch (this.type) {\r\n      case 'date':\r\n        this.startView = this.startView !== 'clock' ? this.startView : 'month';\r\n        break;\r\n      case 'time':\r\n        this.startView = 'clock';\r\n        break;\r\n      default:\r\n        this.startView = this.startView;\r\n    }\r\n\r\n    if (this._datepicker) {\r\n      this._datepicker._selectedChanged.subscribe((date: D) => {\r\n        const value = this._dateAdapter.createDate(\r\n          this._dateAdapter.getYear(date),\r\n          this._dateAdapter.getMonth(date),\r\n          this._dateAdapter.getDate(date),\r\n          this._selected ? this._dateAdapter.getHours(this._selected) : 0,\r\n          this._selected ? this._dateAdapter.getMinutes(this._selected) : 0\r\n        );\r\n        // update the corresponding changes\r\n        this._select(value);\r\n      });\r\n    }\r\n\r\n    // refresh the input\r\n    this._datepickerInput.value = this._selected;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.close();\r\n    this._inputSubscription.unsubscribe();\r\n    this._selectedChanged.complete();\r\n    this._disabledChange.complete();\r\n\r\n    if (this._popupRef) {\r\n      this._popupRef.dispose();\r\n      this._popupComponentRef = null;\r\n    }\r\n  }\r\n\r\n  /** Selects the given date */\r\n  _select(date: D): void {\r\n    const oldValue = this._selected;\r\n    this._selected = date;\r\n    const unit = this.type.indexOf('time') >= 0 ? 'minute' : 'day';\r\n    if (!this._dateAdapter.sameDate(oldValue, this._selected, unit)) {\r\n      this._selectedChanged.next(date);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register an input with this datepicker.\r\n   * @param input The datepicker input to register with this datepicker.\r\n   */\r\n  _registerInput(input: MatDatepickerInput<D>): void {\r\n    if (this._datepickerInput) {\r\n      throw Error('A MatDatepicker can only be associated with a single input.');\r\n    }\r\n    this._datepickerInput = input;\r\n    this._inputSubscription = this._datepickerInput._valueChange.subscribe(\r\n      (value: D | null) =>\r\n        (this._selected =\r\n          value && this._dateAdapter.isDateInstance(value) ? this._dateAdapter.clone(value) : null)\r\n    );\r\n  }\r\n\r\n  /** Open the calendar. */\r\n  open(): void {\r\n    if (this._opened || this.disabled) {\r\n      return;\r\n    }\r\n    if (!this._datepickerInput) {\r\n      throw Error('Attempted to open an MatDatepicker with no associated input.');\r\n    }\r\n    if (this._document) {\r\n      this._focusedElementBeforeOpen = this._document.activeElement;\r\n    }\r\n\r\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\r\n    this._opened = true;\r\n    this.openedStream.emit();\r\n  }\r\n\r\n  reset(value?: D | null) {\r\n    this._datepickerInput.reset(value);\r\n  }\r\n\r\n  /** Close the calendar. */\r\n  close(): void {\r\n    if (!this._opened) {\r\n      return;\r\n    }\r\n    if (this._popupRef && this._popupRef.hasAttached()) {\r\n      this._popupRef.detach();\r\n    }\r\n    if (this._dialogRef) {\r\n      this._dialogRef.close();\r\n      this._dialogRef = null;\r\n    }\r\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\r\n      this._calendarPortal.detach();\r\n    }\r\n\r\n    const completeClose = () => {\r\n      // The `_opened` could've been reset already if\r\n      // we got two events in quick succession.\r\n      if (this._opened) {\r\n        this._opened = false;\r\n        this.closedStream.emit();\r\n        this._focusedElementBeforeOpen = null;\r\n      }\r\n    };\r\n\r\n    if (\r\n      this._focusedElementBeforeOpen &&\r\n      typeof this._focusedElementBeforeOpen.focus === 'function'\r\n    ) {\r\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\r\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\r\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\r\n      // able to close the calendar at all. We work around it by making the logic, that marks\r\n      // the datepicker as closed, async as well.\r\n      this._focusedElementBeforeOpen.focus();\r\n      setTimeout(completeClose);\r\n    } else {\r\n      completeClose();\r\n    }\r\n  }\r\n\r\n  /** Open the calendar as a dialog. */\r\n  private _openAsDialog(): void {\r\n    this._dialogRef = this._dialog.open<MatDatepickerContent<D>>(MatDatepickerContent, {\r\n      direction: this._dir ? this._dir.value : 'ltr',\r\n      viewContainerRef: this._viewContainerRef,\r\n      panelClass: 'mat-datepicker-dialog'\r\n    });\r\n\r\n    this._dialogRef.afterClosed().subscribe(() => this.close());\r\n    this._dialogRef.componentInstance.datepicker = this;\r\n  }\r\n\r\n  /** Open the calendar as a popup. */\r\n  private _openAsPopup(): void {\r\n    if (!this._calendarPortal) {\r\n      this._calendarPortal = new ComponentPortal<MatDatepickerContent<D>>(\r\n        MatDatepickerContent,\r\n        this._viewContainerRef\r\n      );\r\n    }\r\n\r\n    if (!this._popupRef) {\r\n      this._createPopup();\r\n    }\r\n\r\n    if (!this._popupRef.hasAttached()) {\r\n      this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\r\n      this._popupComponentRef.instance.datepicker = this;\r\n\r\n      // Update the position once the calendar has rendered.\r\n      this._ngZone.onStable\r\n        .asObservable()\r\n        .pipe(take(1))\r\n        .subscribe(() => {\r\n          this._popupRef.updatePosition();\r\n        });\r\n    }\r\n  }\r\n\r\n  /** Create the popup. */\r\n  private _createPopup(): void {\r\n    const overlayConfig = new OverlayConfig({\r\n      positionStrategy: this._createPopupPositionStrategy(),\r\n      hasBackdrop: true,\r\n      backdropClass: 'mat-overlay-transparent-backdrop',\r\n      direction: this._dir,\r\n      scrollStrategy: this._scrollStrategy(),\r\n      panelClass: 'mat-datepicker-popup'\r\n    });\r\n\r\n    this._popupRef = this._overlay.create(overlayConfig);\r\n\r\n    merge(\r\n      this._popupRef.backdropClick(),\r\n      this._popupRef.detachments(),\r\n      this._popupRef.keydownEvents().pipe(\r\n        filter(event => {\r\n          // Closing on alt + up is only valid when there's an input associated with the datepicker.\r\n          return (\r\n            event.keyCode === ESCAPE ||\r\n            (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW)\r\n          );\r\n        })\r\n      )\r\n    ).subscribe(() => this.close());\r\n  }\r\n\r\n  /** Create the popup PositionStrategy. */\r\n  private _createPopupPositionStrategy(): PositionStrategy {\r\n    return this._overlay\r\n      .position()\r\n      .flexibleConnectedTo(this._datepickerInput.getPopupConnectionElementRef())\r\n      .withTransformOriginOn('.mat-datepicker-content')\r\n      .withFlexibleDimensions(false)\r\n      .withViewportMargin(8)\r\n      .withPush(false)\r\n      .withPositions([\r\n        {\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        },\r\n        {\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'bottom'\r\n        },\r\n        {\r\n          originX: 'end',\r\n          originY: 'bottom',\r\n          overlayX: 'end',\r\n          overlayY: 'top'\r\n        },\r\n        {\r\n          originX: 'end',\r\n          originY: 'top',\r\n          overlayX: 'end',\r\n          overlayY: 'bottom'\r\n        }\r\n      ]);\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { DOWN_ARROW } from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NG_VALIDATORS,\r\n  NG_VALUE_ACCESSOR,\r\n  ValidationErrors,\r\n  Validator,\r\n  ValidatorFn,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\r\nimport { MatFormField } from '@angular/material/form-field';\r\nimport { Subscription } from 'rxjs';\r\nimport { DateAdapter } from './core/index';\r\nimport { MAT_DATE_FORMATS, MatDateFormats } from './core/index';\r\nimport { MatDatepicker } from './datepicker';\r\nimport { createMissingDateImplError } from './datepicker-errors';\r\n\r\nexport const MAT_DATEPICKER_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MatDatepickerInput),\r\n  multi: true\r\n};\r\n\r\nexport const MAT_DATEPICKER_VALIDATORS: any = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => MatDatepickerInput),\r\n  multi: true\r\n};\r\n\r\n/**\r\n * An event used for datepicker input and change events. We don't always have access to a native\r\n * input or change event because the event may have been triggered by the user clicking on the\r\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\r\n */\r\nexport class MatDatepickerInputEvent<D> {\r\n  /** The new value for the target datepicker input. */\r\n  value: D | null;\r\n\r\n  constructor(\r\n    /** Reference to the datepicker input component that emitted the event. */\r\n    public target: MatDatepickerInput<D>,\r\n    /** Reference to the native input element associated with the datepicker input. */\r\n    public targetElement: HTMLElement\r\n  ) {\r\n    this.value = this.target.value;\r\n  }\r\n}\r\n\r\n/** Directive used to connect an input to a MatDatepicker. */\r\n@Directive({\r\n  selector: 'input[matDatepicker]',\r\n  providers: [\r\n    MAT_DATEPICKER_VALUE_ACCESSOR,\r\n    MAT_DATEPICKER_VALIDATORS,\r\n    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput }\r\n  ],\r\n  host: {\r\n    '[attr.aria-haspopup]': 'true',\r\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\r\n    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\r\n    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\r\n    '[attr.disabled]': 'disabled',\r\n    '(input)': '_onInput($event.target.value)',\r\n    '(change)': '_onChange()',\r\n    '(blur)': '_onBlur()',\r\n    '(keydown)': '_onKeydown($event)'\r\n  },\r\n  exportAs: 'matDatepickerInput'\r\n})\r\nexport class MatDatepickerInput<D>\r\n  implements AfterContentInit, ControlValueAccessor, OnDestroy, Validator {\r\n  /** The datepicker that this input is associated with. */\r\n  @Input()\r\n  set matDatepicker(value: MatDatepicker<D>) {\r\n    this.registerDatepicker(value);\r\n  }\r\n  _datepicker: MatDatepicker<D>;\r\n\r\n  private registerDatepicker(value: MatDatepicker<D>) {\r\n    if (value) {\r\n      this._datepicker = value;\r\n      this._datepicker._registerInput(this);\r\n    }\r\n  }\r\n\r\n  /** Function that can be used to filter out dates within the datepicker. */\r\n  @Input()\r\n  set matDatepickerFilter(filter: (date: D | null, unit?: string) => boolean) {\r\n    this._dateFilter = filter;\r\n    this._validatorOnChange();\r\n  }\r\n  _dateFilter: (date: D | null, unit?: string) => boolean;\r\n\r\n  /** The value of the input. */\r\n  @Input()\r\n  get value(): D | null {\r\n    return this._value;\r\n  }\r\n  set value(value: D | null) {\r\n    value = this._dateAdapter.deserialize(value);\r\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\r\n    value = this._getValidDateOrNull(value);\r\n\r\n    const oldDate = this.value;\r\n    this._value = value;\r\n    this._formatValue(value);\r\n\r\n    if (!this._dateAdapter.sameDate(oldDate, value)) {\r\n      this._valueChange.emit(value);\r\n    }\r\n  }\r\n  private _value: D | null;\r\n  private _firstValue: D | null;\r\n\r\n  /** The minimum valid date. */\r\n  @Input()\r\n  get min(): D | null {\r\n    return this._min;\r\n  }\r\n  set min(value: D | null) {\r\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._validatorOnChange();\r\n  }\r\n  private _min: D | null;\r\n\r\n  /** The maximum valid date. */\r\n  @Input()\r\n  get max(): D | null {\r\n    return this._max;\r\n  }\r\n  set max(value: D | null) {\r\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    this._validatorOnChange();\r\n  }\r\n  private _max: D | null;\r\n\r\n  /** Whether the datepicker-input is disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return !!this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    const newValue = coerceBooleanProperty(value);\r\n    const element = this._elementRef.nativeElement;\r\n\r\n    if (this._disabled !== newValue) {\r\n      this._disabled = newValue;\r\n      this._disabledChange.emit(newValue);\r\n    }\r\n\r\n    // We need to null check the `blur` method, because it's undefined during SSR.\r\n    if (newValue && element.blur) {\r\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\r\n      // is problematic, because it would mean that it triggers another change detection cycle,\r\n      // which then causes a changed after checked error if the input element was focused before.\r\n      element.blur();\r\n    }\r\n  }\r\n  private _disabled: boolean;\r\n\r\n  /** Emits when a `change` event is fired on this `<input>`. */\r\n  @Output() readonly dateChange = new EventEmitter<MatDatepickerInputEvent<D>>();\r\n\r\n  /** Emits when an `input` event is fired on this `<input>`. */\r\n  @Output() readonly dateInput = new EventEmitter<MatDatepickerInputEvent<D>>();\r\n\r\n  /** Emits when the value changes (either due to user input or programmatic change). */\r\n  _valueChange = new EventEmitter<D | null>();\r\n\r\n  /** Emits when the disabled state has changed */\r\n  _disabledChange = new EventEmitter<boolean>();\r\n\r\n  _onTouched = () => {};\r\n\r\n  private _cvaOnChange: (value: any) => void = () => {};\r\n\r\n  private _validatorOnChange = () => {};\r\n\r\n  private _datepickerSubscription = Subscription.EMPTY;\r\n\r\n  private _localeSubscription = Subscription.EMPTY;\r\n\r\n  /** The form control validator for whether the input parses. */\r\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\r\n    return this._lastValueValid\r\n      ? null\r\n      : { matDatepickerParse: { text: this._elementRef.nativeElement.value } };\r\n  };\r\n\r\n  /** The form control validator for the min date. */\r\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return !this.min || !controlValue || this._dateAdapter.compareDate(this.min, controlValue) <= 0\r\n      ? null\r\n      : { matDatepickerMin: { min: this.min, actual: controlValue } };\r\n  };\r\n\r\n  /** The form control validator for the max date. */\r\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return !this.max || !controlValue || this._dateAdapter.compareDate(this.max, controlValue) >= 0\r\n      ? null\r\n      : { matDatepickerMax: { max: this.max, actual: controlValue } };\r\n  };\r\n\r\n  /** The form control validator for the date filter. */\r\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue)\r\n      ? null\r\n      : { matDatepickerFilter: true };\r\n  };\r\n\r\n  /** The combined form control validator for this input. */\r\n  private _validator: ValidatorFn | null = Validators.compose([\r\n    this._parseValidator,\r\n    this._minValidator,\r\n    this._maxValidator,\r\n    this._filterValidator\r\n  ]);\r\n\r\n  /** Whether the last value set on the input was valid. */\r\n  private _lastValueValid = false;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    @Optional() public _dateAdapter: DateAdapter<D>,\r\n    @Optional()\r\n    @Inject(MAT_DATE_FORMATS)\r\n    private _dateFormats: MatDateFormats,\r\n    @Optional() private _formField: MatFormField\r\n  ) {\r\n    if (!this._dateAdapter) {\r\n      throw createMissingDateImplError('DateAdapter');\r\n    }\r\n    if (!this._dateFormats) {\r\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // Update the displayed date when the locale changes.\r\n    this._localeSubscription = this._dateAdapter.localeChanges.subscribe(() => {\r\n      this.value = this.value;\r\n    });\r\n\r\n    if (this._datepicker) {\r\n      this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((selected: D) => {\r\n        this.value = selected;\r\n        this._cvaOnChange(selected);\r\n        this._onTouched();\r\n        this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\r\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._datepickerSubscription.unsubscribe();\r\n    this._localeSubscription.unsubscribe();\r\n    this._valueChange.complete();\r\n    this._disabledChange.complete();\r\n  }\r\n\r\n  reset(value?: D | null): void {\r\n    this.value = value !== undefined ? value : this._firstValue;\r\n    this._cvaOnChange(this._value);\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void): void {\r\n    this._validatorOnChange = fn;\r\n  }\r\n\r\n  validate(c: AbstractControl): ValidationErrors | null {\r\n    return this._validator ? this._validator(c) : null;\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @deletion-target 7.0.0 Use `getConnectedOverlayOrigin` instead\r\n   */\r\n  getPopupConnectionElementRef(): ElementRef {\r\n    return this.getConnectedOverlayOrigin();\r\n  }\r\n\r\n  /**\r\n   * Gets the element that the datepicker popup should be connected to.\r\n   * @return The element to connect the popup to.\r\n   */\r\n  getConnectedOverlayOrigin(): ElementRef {\r\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  writeValue(value: D): void {\r\n    if (this._firstValue === undefined) {\r\n      this._firstValue = value;\r\n    }\r\n    this.value = value;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  registerOnChange(fn: (value: any) => void): void {\r\n    this._cvaOnChange = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  registerOnTouched(fn: () => void): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  // Implemented as part of ControlValueAccessor\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  _onKeydown(event: KeyboardEvent) {\r\n    if (event.altKey && event.keyCode === DOWN_ARROW) {\r\n      this._datepicker.open();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  _onInput(value: string) {\r\n    const type = this._datepicker.type;\r\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse[type]);\r\n    this._lastValueValid = (!value && !date) || this._dateAdapter.isValid(date);\r\n    date = this._getValidDateOrNull(date);\r\n\r\n    if (!this._dateAdapter.sameDate(date, this._value)) {\r\n      this._value = date;\r\n      this._valueChange.emit(date);\r\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\r\n    }\r\n    // update on every (input) change\r\n    this._cvaOnChange(date);\r\n  }\r\n\r\n  _onChange() {\r\n    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\r\n  }\r\n\r\n  /** Handles blur events on the input. */\r\n  _onBlur() {\r\n    // Reformat the input only if we have a valid value.\r\n    if (this.value) {\r\n      this._formatValue(this.value);\r\n    }\r\n\r\n    this._onTouched();\r\n  }\r\n\r\n  /** Formats a value and sets it on the input element. */\r\n  private _formatValue(value: D | null) {\r\n    const type = this._datepicker.type;\r\n    this._elementRef.nativeElement.value = value\r\n      ? this._dateAdapter.format(value, this._dateFormats.display[type])\r\n      : '';\r\n  }\r\n\r\n  /**\r\n   * @param obj The object to check.\r\n   * @returns The given object if it is both a date instance and valid, otherwise null.\r\n   */\r\n  private _getValidDateOrNull(obj: any): D | null {\r\n    return this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj) ? obj : null;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  Directive,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { merge, of as obsOf, Subscription } from 'rxjs';\r\nimport { MatDatepicker } from './datepicker';\r\nimport { MatDatepickerIntl } from './datepicker-intl';\r\n\r\n/** Can be used to override the icon of a `matDatepickerToggle`. */\r\n@Directive({\r\n  selector: '[matDatepickerToggleIcon]'\r\n})\r\nexport class MatDatepickerToggleIcon {}\r\n\r\n@Component({\r\n  selector: 'mat-datepicker-toggle',\r\n  templateUrl: 'datepicker-toggle.html',\r\n  // styleUrls: ['datepicker-toggle.css'],\r\n  host: {\r\n    class: 'mat-datepicker-toggle',\r\n    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened'\r\n  },\r\n  exportAs: 'matDatepickerToggle',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\nexport class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\r\n  private _stateChanges = Subscription.EMPTY;\r\n\r\n  /** Datepicker instance that the button will toggle. */\r\n  @Input('for') datepicker: MatDatepicker<D>;\r\n\r\n  /** Whether the toggle button is disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n  }\r\n  private _disabled: boolean;\r\n\r\n  /** Custom icon set by the consumer. */\r\n  @ContentChild(MatDatepickerToggleIcon) _customIcon: MatDatepickerToggleIcon;\r\n\r\n  constructor(public _intl: MatDatepickerIntl, private _changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.datepicker) {\r\n      this._watchStateChanges();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._stateChanges.unsubscribe();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._watchStateChanges();\r\n  }\r\n\r\n  _open(event: Event): void {\r\n    if (this.datepicker && !this.disabled) {\r\n      this.datepicker.open();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private _watchStateChanges() {\r\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : obsOf();\r\n\r\n    const inputDisabled =\r\n      this.datepicker && this.datepicker._datepickerInput\r\n        ? this.datepicker._datepickerInput._disabledChange\r\n        : obsOf();\r\n\r\n    const datepickerToggled = this.datepicker\r\n      ? merge(this.datepicker.openedStream, this.datepicker.closedStream)\r\n      : obsOf();\r\n\r\n    this._stateChanges.unsubscribe();\r\n    this._stateChanges = merge(\r\n      this._intl.changes,\r\n      datepickerDisabled,\r\n      inputDisabled,\r\n      datepickerToggled\r\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCalendar } from './calendar';\r\nimport { MatCalendarBody } from './calendar-body';\r\nimport { MatClockView } from './clock-view';\r\nimport {\r\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\r\n  MatDatepicker,\r\n  MatDatepickerContent\r\n} from './datepicker';\r\nimport { MatDatepickerInput } from './datepicker-input';\r\nimport { MatDatepickerIntl } from './datepicker-intl';\r\nimport { MatDatepickerToggle, MatDatepickerToggleIcon } from './datepicker-toggle';\r\nimport { MatMonthView } from './month-view';\r\nimport { MatYearView } from './year-view';\r\nimport { MatYearsView } from './years-view';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    OverlayModule,\r\n    A11yModule\r\n  ],\r\n  exports: [\r\n    MatCalendar,\r\n    MatCalendarBody,\r\n    MatDatepicker,\r\n    MatDatepickerContent,\r\n    MatDatepickerInput,\r\n    MatDatepickerToggle,\r\n    MatDatepickerToggleIcon,\r\n    MatClockView,\r\n    MatMonthView,\r\n    MatYearView,\r\n    MatYearsView\r\n  ],\r\n  declarations: [\r\n    MatCalendar,\r\n    MatCalendarBody,\r\n    MatDatepicker,\r\n    MatDatepickerContent,\r\n    MatDatepickerInput,\r\n    MatDatepickerToggle,\r\n    MatDatepickerToggleIcon,\r\n    MatClockView,\r\n    MatMonthView,\r\n    MatYearView,\r\n    MatYearsView\r\n  ],\r\n  providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\r\n  entryComponents: [MatDatepickerContent]\r\n})\r\nexport class MatDatepickerModule {}\r\n"],"names":["InjectionToken","inject","LOCALE_ID","Subject","tslib_1.__extends","Injectable","Platform","Optional","Inject","NgModule","PlatformModule","range","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","ElementRef","Input","Output","trigger","transition","animate","keyframes","style","state","group","query","animateChild","take","NgZone","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","HOME","END","PAGE_UP","PAGE_DOWN","ENTER","Directionality","ViewChild","fromEvent","sampleTime","mergeMap","obsOf","Overlay","ESCAPE","Subscription","coerceBooleanProperty","ComponentPortal","OverlayConfig","merge","filter","MatDialog","ViewContainerRef","DOCUMENT","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","Validators","Directive","MAT_INPUT_VALUE_ACCESSOR","MatFormField","ContentChild","CommonModule","MatButtonModule","MatDialogModule","MatIconModule","OverlayModule","A11yModule"],"mappings":"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"}